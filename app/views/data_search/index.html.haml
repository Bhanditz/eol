- if @traits.blank?
  .empty
    %p= data_search_results_summary
- else
  - if @known_uri
    .definition
      %ul.glossary
        = render('known_uris/definition', { known_uri: @known_uri, attribution: true, glossary_link: true })
  .header
    -# TODO: replace those 100s. :\
    - start_number = (@page - 1) * 100 + 1
    - end_number = [ (start_number + 100 - 1), @traits.total_entries ].min
    - previous_label = (@page == 1) ? '' : I18n.t(:pagination_previous_with_count, count: 100)
    - next_label = (@traits.traits.count < 100) ? '' : I18n.t(:pagination_next_with_count, count: 100)
    %h3= raw(I18n.t(:displaying_numerical_range_eol_records_with_count, start_number: start_number, end_number: end_number, count: @traits.total_entries))
    = will_paginate @traits.traits, previous_label: previous_label, next_label: next_label, inner_window: 2
  #taxon_data
    %table.standard.data.search
      - @traits.traits.each do |trait|
        - if trait.point.nil?
          -# This is a "placeholder" for a hidden row.
          %tr{id: trait.point.anchor, class: "data hidden"}
            %td.placeholder{colspan: 6}
              = "Could not find a data point for #{trait.point}"
        - elsif trait.point.hidden?
          -# This is a "placeholder" for a hidden row.
          %tr{id: trait.point.anchor, class: "data hidden"}
            %td.placeholder{colspan: 6}
              = I18n.t(:data_search_row_hidden)
        - else
          - classes = []
          - unless trait.point.visible?
            - if current_user.is_curator?
              - classes << 'hidden'
            - else
              - next
          - else
            - row_is_selected = (@selected_data_point_uri_id && @selected_data_point_uri_id.to_i == trait.point.id)
            -# using the instance methods as opposed to scopes allows us to use
            -# preloaded taxon_data_exemplars
            - exemplar = trait.point.taxon_data_exemplars.select(&:included?).any?
            - excluded = trait.point.taxon_data_exemplars.select(&:excluded?).any?
            - taxon_link = taxon_data_path(trait.page)
            %tr.data{ id: trait.anchor, class: (classes + ['data']).join(' ') }
              %td.taxon
                .icon
                  - if image = trait.page.exemplar_or_best_image_from_solr
                    - if thumb = image.thumb_or_object('88_88')
                      = link_to image_tag(thumb), taxon_link
                  = link_to content_tag(:span, '', { title: I18n.t(:item_type_taxon_assistive) } ), taxon_link
                .names
                  %h4
                    = link_to raw(truncate(trait.page.collected_name, length: 64)), taxon_link
                  - subtitle = trait.page.preferred_common_name_in_language(current_language)
                  - unless subtitle.blank?
                    = link_to subtitle.firstcap, taxon_link
              %th.predicate
                %a.info_icon
                  \&nbsp;
                .term{ data: { term: "TODO" }}
                  - add_exemplar_or_excluded_icon(exemplar: exemplar, excluded: excluded)
                  = trait.predicate_name
                  - if trait.statistical_method?
                    %span.stat= trait.statistical_method_names.join(", ")
                  %span.info
                    %ul.glossary
                      = render(partial: 'known_uris/definition',
                        locals: { known_uri: trait.predicate_uri, search_link: true, glossary_link: true })
              %td.val
                .term{ data: { term: "TODO" }}
                  - add_exemplar_or_excluded_icon(exemplar: exemplar, excluded: excluded)
                  = format_value(trait).html_safe
                  - if trait.value_uri && trait.value_uri.is_a?(KnownUri)
                    %span.info
                      %ul.glossary
                        = render(partial: 'known_uris/definition',
                          locals: { known_uri: trait.value_uri, search_link: true,
                          glossary_link: true })
                  - if trait.sex
                    %span.stat= trait.sex_name
                  - if trait.life_stage
                    %span.stat= trait.life_stage_name
              %td.source
                - if trait.resource
                  = link_to(trait.resource.content_partner.name,
                    [trait.partner, trait.resource])
                - else
                  = "No resource!"
                  = link_to(trait.source_url, trait.source_url)
              %td.comment
                %span.comments
                  - if trait.comments.empty?
                    &nbsp;
                  - else
                    = image_tag('comment_indicator.png')
            %tr.actions{ id: "#{trait.anchor}_actions", class: (classes + ['actions']).join(' ') }
              %td{ colspan: 5 }
                .actions
                  %ul
                    %li
                      - if trait.content_partner
                        = raw I18n.t("data_provided_by_content_partner",
                          whom: link_to(trait.content_partner.name,
                          trait.content_partner))
                      - else
                        = I18n.t(:data_point_uri_source_missing)
