- download_link = link_to I18n.t("download_#{en_mime_type.sub(/\//, '_')}"), sound_url, { :title => I18n.t("download_#{en_mime_type.sub(/\//, '_')}_assistive") }

- if type == 'big'
  .jp-jplayer{:id => "jquery_jplayer_1"}
  .jp-audio{}
    .jp-type-single{}
      .jp-interface{:id => "jp_interface_1"}
        %ul{:class => "jp-controls"}
          %li
            %a{:href => '#', :class => "jp-play", :tabindex => "1"}= I18n.t(:audio_play)
          %li
            %a{:href => '#', :class => "jp-pause", :tabindex => "1"}= I18n.t(:audio_pause)
          %li
            %a{:href => '#', :class => "jp-stop", :tabindex => "1"}= I18n.t(:audio_stop)
          %li
            %a{:href => '#', :class => "jp-mute", :tabindex => "1"}= I18n.t(:audio_mute)
          %li
            %a{:href => '#', :class => "jp-unmute", :tabindex => "1"}= I18n.t(:audio_unmute)
        .jp-progress
          .jp-seek-bar
            .jp-play-bar
        .jp-volume-bar
          .jp-volume-bar-value
        .jp-current-time
        .jp-duration
      .jp-playlist{:id => "jp_playlist_1"}
        %ul
          %li
            %noscript{:id => 'no_script'}= I18n.t(:player_is_disabled) + '<br>'
            = download_link
- else

  %style
    span.jsonly { display: none }

  - no_script = download_link
  %noscript= no_script

  %span{:id => "#{sound_id}", :class => "jsonly"}
    .player
      %a{:href => '#', :id => "play"}= I18n.t(:audio_play)
      %a{:href => '#', :id => "pause"}= I18n.t(:audio_pause)
      |
      %a{:href => '#', :id => "stop"}= I18n.t(:audio_stop)
      .jp-jplayer{:id => "player_" + "#{sound_id}"}

  :javascript
    document.getElementById("#{sound_id}").className = document.getElementById("#{sound_id}").className.replace('jsonly','jsOn');

:javascript
  $(document).ready(function(){

    $("#jquery_jplayer_1").jPlayer({
      ready: function () {
        $(this).jPlayer("setMedia", {
          mp3: "#{sound_url}"
        }).jPlayer(""); // put 'play' here to auto-play
      },
      ended: function (event) {
        //$(this).jPlayer("play");
      },
      swfPath: "/javascripts/jplayer/js",
      supplied: "mp3"
    });
    
    player_id = "#player_".concat("#{sound_id}");
    $(player_id).jPlayer({
    ready: function () {
      $(this).jPlayer("setMedia", {
      mp3: "#{sound_url}"
      });
    },
    swfPath: "/javascripts/jplayer/js",
    supplied: "mp3",
    cssSelectorAncestor: "",
    cssSelector: {
      play: "#play",
      pause: "#pause",
      stop: "#stop"
    }
    }).bind($.jPlayer.event.play, function() { // Using a jPlayer event to avoid both jPlayers playing together.
        $(this).jPlayer("pauseOthers");
        });
    
  });