- classes ||= [ ]
- type_index ||= nil
- exemplar = false unless exemplar == true
- excluded = false unless exemplar == true
- row_is_selected = false unless row_is_selected == true
- for_search = false unless for_search == true
- if defined? header_id
  - first_of_type = header_id
- else
  - header_id = nil
  - first_of_type = true
- comments = data_point_uri.comments
- taxon_concept = data_point_uri.taxon_concept.latest_version
- taxon_link = taxon_data_path(taxon_concept)

%tr{ id: data_point_uri.anchor, class: (classes + ['data']).join(' '), 'data-type' => type_index.nil? ? nil : "type_#{type_index}" }
  -# search results get the taxon image and taxon name
  - if for_search
    %td.taxon
      .icon
        - if image = taxon_concept.exemplar_or_best_image_from_solr
          - if thumb = image.thumb_or_object('88_88')
            = link_to image_tag(thumb), taxon_link
        = link_to content_tag(:span, '', { :title => I18n.t(:item_type_taxon_assistive) } ), taxon_link
      .names
        %h4
          = link_to raw(truncate(taxon_concept.collected_name, :length => 64)), taxon_link
        - subtitle = taxon_concept.preferred_common_name_in_language(current_language)
        - unless subtitle.blank?
          = link_to subtitle.firstcap, taxon_link
  %th{ id: header_id }
    - if data_point_uri.predicate_known_uri
      %div.info
        - if !data_point_uri.predicate_known_uri.definition.blank?
          %dt= data_point_uri.predicate
          %dd= raw data_point_uri.predicate_known_uri.definition.add_missing_hyperlinks
        - else
          .uri= data_point_uri.predicate
        %dd= link_to I18n.t(:more_taxa_with_attribute), data_search_path(:attribute => data_point_uri.predicate, :sort => 'desc')
    - if first_of_type
      = display_uri(data_point_uri.predicate_uri, :span, class: exemplar ? 'exemplar' : (excluded ? 'excluded' : nil))
    - elsif exemplar || excluded
      %span{ class: exemplar ? 'exemplar' : (excluded ? 'excluded' : nil) }
  %td.val{ headers: header_id }
    %span.fold
      - arrow_file_name = row_is_selected ? 'arrow_fold_down.png' : 'arrow_fold_right.png'
      = link_to(image_tag(arrow_file_name, alt: I18n.t(:data_row_arrow_alt)), taxon_data_path(data_point_uri.taxon_concept, :data_point_uri_id => data_point_uri.id, :anchor => data_point_uri.anchor))
    = raw display_text_for_data_point_uri(data_point_uri)
    %span.comments
      - if comments.empty?
        &nbsp;
      - else
        = image_tag('comment_indicator.png')
    %span.source= data_point_uri.source.name
    - if row_is_selected
      = render partial: 'data_point_uris/metadata', locals: { data_point_uri: data_point_uri }
%tr{ class: (classes + ['actions']).join(' '), style: row_is_selected ? nil : 'display: none;' }
  %td{ colspan: (for_search ? 3 : 2) }
    %ul
      %li= raw I18n.t("data_provided_by_#{data_point_uri.source.class.name.underscore.downcase}", whom: link_to(data_point_uri.source.name, data_point_uri.source))
      %li
        &bull;&ensp;
        = link_to I18n.t(:see_this_record_in_virtuoso), ($VIRTUOSO_FACET_BROWSER_URI_PREFIX + CGI.escape(data_point_uri.uri)), :target => 'data'
      - if data_point_uri.user_added_data
        - if current_user.can_update?(data_point_uri.user_added_data)
          %li
            &bull;&ensp;
            = link_to I18n.t(:edit), edit_user_added_datum_path(data_point_uri.user_added_data), :method => :get
          %li
            &bull;&ensp;
            = link_to I18n.t(:delete), user_added_datum_path(data_point_uri.user_added_data), :method => :delete, :confirm => I18n.t('this_cannot_be_undone_are_you_sure')
      - unless comments.empty?
        - annotations_link = data_point_uri_comments_path(data_point_uri)
        - if annotations_link
          %li.annotations
            &bull;&ensp;
            = link_to I18n.t(:annotations_with_count, count: comments.count), annotations_link
    = render partial: 'comments/for_data', locals: { comments: comments, data_point_instance: data_point_uri }
    -# TODO - this clearly needs duck-typing, as it is ridiculous to repeat onesself so much.
    - if current_user.min_curator_level?(:full)
      .additional_commands
        - if data_point_uri.visible?
          - hide_link =  data_point_uri_hide_path(data_point_uri)
          = link_to I18n.t(:data_row_hide_button), hide_link, method: :put, class: 'hide button', remote: true
        - elsif data_point_uri.invisible?
          - show_link = data_point_uri_unhide_path(data_point_uri)
          = link_to I18n.t(:data_row_unhide_button), show_link, method: :put, class: 'unhide button', remote: true
        - unless excluded || for_search
          = link_to I18n.t(:data_row_remove_exemplar_button), taxon_data_exemplars_path(id: data_point_uri.id, taxon_concept_id: data_point_uri.taxon_concept.id, exclude: true), method: :post, class: "remove_exemplar button#{data_point_uri.visible? ? nil : ' hidden'}", remote: true
        - unless exemplar || for_search
          = link_to I18n.t(:data_row_add_exemplar_button), taxon_data_exemplars_path(id: data_point_uri.id, taxon_concept_id: data_point_uri.taxon_concept.id), method: :post, class: "add_exemplar button#{data_point_uri.visible? ? nil : ' hidden'}", remote: true
        - if excluded && ! for_search
          %span.note= I18n.t(:data_row_excluded_from_overview_notice)
