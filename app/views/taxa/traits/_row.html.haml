- classes ||= []
- row_is_selected = @trait_id == trait.id
- if local_assigns.has_key?(:header_id)
  - first_of_type = false
- else
  - header_id = nil
  - first_of_type = true
%tr{ id: trait.anchor, class: (classes + ['data']).join(' '), data: { toc: "toc_#{toc_id}" } }
  %th.predicate{ id: header_id }
    - if first_of_type
      -# Note the '-' here is *needed* because of the haml_cat used in the method:
      - info_icon
      = define(trait.predicate)
      .term{ data: { term: trait.predicate.anchor } }
        = add_exemplar_or_excluded_icon(exemplar: trait.exemplar?, excluded: trait.excluded?)
        = @traits.name_of_uri(trait.predicate)
        = display_text_for_modifiers(@traits.name_of_uri(trait.stat_method))
    - else
      - unless @traits.name_of_uri(trait.stat_method).blank?
        = add_exemplar_or_excluded_icon(exemplar: trait.exemplar?, excluded: trait.excluded?)
        %span.stat= trait.statistical_method_label
        -# Note the '-' here is *needed* because of the haml_cat used in the method:
        - info_icon
      - else
        %span
          = add_exemplar_or_excluded_icon(exemplar: trait.exemplar?, excluded: trait.excluded?)
          - info_icon
  %td.val{ headers: header_id, id: "#{header_id}_d" }
    %span.fold
      = link_to(image_tag(row_is_selected ? 'arrow_fold_down.png' : 'arrow_fold_right.png',
        alt: I18n.t(:data_row_additional_detail_alt)),
        taxon_traits_path(@traits, trait_id: trait.id),
        title: I18n.t(:data_row_additional_detail_assistive))
    %span{ id: trait.anchor }
      - if trait.associated_to
        - link_to(@traits.name_of_association(trait), taxon_data_path(trait.associated_to))
      - else
        %span
          - value = trait.value
          - if value.is_a?(KnownUri)
            - uri_as_value(value)
          - elsif value.is_a?(Float)
            -# TODO: Unless the URI says "don't reformat this":
            -# TODO: I don't believe this is I18n'ally correct.
            = float_value(value)
          - elsif value.is_a?(Integer)
            -# TODO: Unless the URI says "don't reformat this":
            number_with_delimiter(value)
          - else # String
            = value
          - if trait.units
            = " "
            - adjust_exponent(uri_as_value(trait.units))
        - if trait.sex || trait.lifestage
          %span.stat
            -# TODO: This is not I18n'ized:
            = [@traits.name_of_uri(trait.sex), @traits.name_of_uri(trait.lifestage)].join(', ')
  %td.source
    %span.source
      = trait.source_name
  %td.comment
    %span.comments
      - if trait.comments.empty?
        &nbsp;
      - else
        = image_tag('comment_indicator.png')
%tr{ id: "#{trait.anchor}_actions", class: (classes + ['actions']).join(' '), style: row_is_selected ? nil : 'display: none;' }
  %td{ colspan: 4 }
    - if row_is_selected
      -# TODO: [sigh]
      = render 'traits/metadata', { trait: trait, header_id: header_id }
    .actions
      %ul
        %li
          = raw I18n.t(:data_provided_by_content_partner, whom: link_to(trait.source.name, trait.source))

-# TODO:

        - if current_user.is_admin?
          %li
            &bull;&ensp;
            = link_to I18n.t(:see_this_record_in_virtuoso), ($VIRTUOSO_FACET_BROWSER_URI_PREFIX + CGI.escape(trait.uri)), target: 'data'
        - if trait.user_added_data
          - if current_user.can_update?(trait.user_added_data)
            %li
              &bull;&ensp;
              = link_to I18n.t(:edit), edit_user_added_datum_path(trait.user_added_data), method: :get
            %li
              &bull;&ensp;
              = link_to I18n.t(:delete), user_added_datum_path(trait.user_added_data), method: :delete, confirm: I18n.t('this_cannot_be_undone_are_you_sure')
      = render 'comments/for_data', { comments: trait.comments, data_point_instance: trait }
      - if current_user.min_curator_level?(:full) || logged_in?
        .additional_commands.clearfix
          - if current_user.min_curator_level?(:full)
            - if trait.visible?
              - hide_link =  trait_hide_path(trait)
              = link_to I18n.t(:data_row_hide_button), hide_link, method: :put, class: 'hide button', remote: true
            - elsif trait.invisible?
              - show_link = trait_unhide_path(trait)
              = link_to I18n.t(:data_row_unhide_button), show_link, method: :put, class: 'unhide button', remote: true
            - unless trait.excluded?
              = link_to I18n.t(:data_row_remove_exemplar_button), taxon_data_exemplars_path(id: trait.id, taxon_concept_id: @traits.taxon_concept.id, exclude: true), method: :post, class: "remove_exemplar button#{trait.visible? ? nil : ' hidden'}", remote: true
            - unless trait.exemplar?
              = link_to I18n.t(:data_row_add_exemplar_button), taxon_data_exemplars_path(id: trait.id, taxon_concept_id: @traits.taxon_concept.id), method: :post, class: "add_exemplar button#{trait.visible? ? nil : ' hidden'}", remote: true
            - if trait.excluded?
              %span.note= I18n.t(:data_row_excluded_from_overview_notice)
          - elsif logged_in?
            %p.note= I18n.t(:annotation_note).html_safe
