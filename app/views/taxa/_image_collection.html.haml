- showing_untrusted_image = false
- showing_unknown_image = false

- @images[0..$MAX_IMAGES_PER_PAGE-1].each do |image|
  - showing_untrusted_image = true if image.untrusted?
  - showing_unknown_image = true if image.unknown?

#image-collection
  #thumbnails.clearfix
    - @images[0..$MAX_IMAGES_PER_PAGE-1].each do |image|
      - name_string = sanitize(strip_tags(@taxon_concept.title))
      - large_img_url = image.smart_image
      - average_rating = image.data_rating
      - user_rating = image['user_rating'] ? image['user_rating'] : 0
      %a{ :id => "thumb-#{image.id}", :href => "/data_objects/#{image.id}", :class => vetted_id_class(image) }
        %span
          - vetting_title = nil
          - vetting_title = I18n.t(:images_in_yellow_are_not_reviewed)  if image.unknown?
          - vetting_title = I18n.t(:images_in_red_are_not_trusted)  if image.untrusted?
          = image_tag image.smart_thumb, :alt => hh(image['scientific_name']), :title => vetting_title
        %ul{:"data-data_object_id" => image.id}
          = render(:partial=>'data_object_states', :locals => {:dato => image})
  %hr

  %div{ :class => "mc-navigation#{!show_next_image_page_button && @taxon_concept.length_of_images < $MAX_IMAGES_PER_PAGE  ? ' no-pagination' : ''}" }
    %p.hide
      = I18n.t(:page_navigation) 
    - if (@image_page ||= 1) > 1
      %a{ :href => url_for(:action => 'images', :taxon_concept_id => @taxon_concept.id, :image_page => @image_page - 1), :title => I18n.t(:back) , :onclick => ajax_delay_click }
        %span#back
          = I18n.t(:back) 
    - else
      %span#noback

    - if @taxon_concept.length_of_images > $MAX_IMAGES_PER_PAGE
      
      %span#pages
        = I18n.t(:page) 
        = @image_page
    - if show_next_image_page_button
      %a{ :href => url_for(:action => 'images', :taxon_concept_id => @taxon_concept.id, :image_page => @image_page + 1), :title => I18n.t(:next) , :onclick => ajax_delay_click, :class => 'ajax_delay_click' }
        %span#next
          = I18n.t(:next) 
    %hr

  #notes-container
    - @images[0..$MAX_IMAGES_PER_PAGE-1].each do |image|
      - taxa_ids = image.published_entries.collect{ |he| he.taxon_concept_id }
      - taxa_names = image.published_entries.collect{ |he| he.name.string }
      - data_supplier = image.data_supplier_agent
      - data_supplier_icon = data_supplier ? citables_to_icons(image.citable_data_supplier) : ''
      - mc_class = 'mc-notes'
      - mc_class += ' unknown-text' if image.unknown?
      - mc_class += ' untrusted-text' if image.untrusted?
      %div{:id => "mc-notes-#{image.id}", :class => mc_class}
        - if image.untrusted?
          %strong
            = I18n.t(:note) 
          = I18n.t(:the_image_from_this_source_is_not_trusted) 
          %br/
        - elsif image.unknown?
          %strong
            Note:
          = I18n.t(:the_image_from_this_source_has_not_been_reviewed) 
          %br/
        - unless taxa_ids.blank?
          - other_taxon_concept_index = nil
          -# loop thru and find a taxa that's NOT the current page's taxa
          -# if the image IS linked to the current taxa then don't show an alternative
          - taxa_ids.each_with_index do |taxon_concept_id, i|
            - if taxon_concept_id == @taxon_concept.id
              - other_taxon_concept_index = nil
              - break
            - elsif other_taxon_concept_index.nil?
              - other_taxon_concept_index = i
          - unless other_taxon_concept_index.nil?
            Image of
            = link_to(taxa_names[other_taxon_concept_index], "/pages/#{taxa_ids[other_taxon_concept_index]}")
            %br/
        = I18n.t(:copyright) 
        - unless image.license.blank?
          - unless image.rights_holder.blank?
            = "&#169 #{image.rights_holder}."
            %br/
          = image.license.description
        - unless image.license.blank? || image.license.logo_url.blank?
          = '&nbsp;&nbsp;'
          = link_to(image_tag(image.license.logo_url), image.license.source_url, :class => "external_link")
        %br/

        - if data_supplier && !data_supplier.full_name.blank?
          = I18n.t(:supplier) 
          - if data_supplier.homepage.blank?
            = data_supplier.full_name
          - else
            = link_to(data_supplier.full_name + external_link_icon, data_supplier.homepage)
            = data_supplier_icon
          %br/
        
        -# This is the dynamic way of displaying all agent roles.
        / 
        - unless image.agents_data_objects.blank?
          - for doa in image.agents_data_objects.sort_by{ |doa| doa.view_order }
            - if doa.agent_role && doa.agent
              - citable = doa.agent.citable(doa.agent_role.label)
              - agents_linked = citables_to_string(citable)
              - agents_icons_linked = citables_to_icons(citable)
              = citable.type.upcase + ": "
              = agents_linked
              - if !agents_icons_linked.blank?
                = agents_icons_linked
              %br/          

        
        - unless image.source_url.blank?
          = I18n.t(:original) 
          = external_link_to('View image source', image.source_url, :class => 'source_url')
          %br/
        
        %br/
        = image.description.balance_tags
