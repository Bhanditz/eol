#classifications_summary.article.classifications
  - count = @browsable_hierarchy_entries.length
  .header
    %h3= I18n.t(:classifications_summary_header_with_count, :count => count)
    - if count > 1
      - if @selected_hierarchy_entry
        = link_to(I18n.t(:see_all_classifications_with_count_html, :count => count), taxon_hierarchy_entry_names_path(@taxon_concept, @selected_hierarchy_entry))
      - else
        = link_to(I18n.t(:see_all_classifications_with_count_html, :count => count), taxon_names_path(@taxon_concept))
  - if count > 0
    %ul
      - @browsable_hierarchy_entries.shuffle[0..1].each do |hierarchy_entry|
        %li
          - taxon_rank = (hierarchy_entry.rank.blank? || hierarchy_entry.rank.label.blank?) ? I18n.t(:taxon).firstcap : hierarchy_entry.rank.label.firstcap
          - if hierarchy_entry.hierarchy.agent.user && !hierarchy_entry.hierarchy.agent.user.content_partners.blank?
            - agent = link_to(hierarchy_entry.hierarchy.agent.full_name, content_partner_path(hierarchy_entry.hierarchy.agent.user.content_partners.first))
          - elsif hierarchy_entry.hierarchy.resource && hierarchy_entry.hierarchy.resource.content_partner
            - agent = link_to(hierarchy_entry.hierarchy.agent.full_name, content_partner_path(hierarchy_entry.hierarchy.resource.content_partner))
          - else
            - agent = hierarchy_entry.hierarchy.agent.full_name
          %h4= I18n.t(:rank_recognized_by_agent_colon, :rank => taxon_rank, :agent => agent)
          %ul
            - if hierarchy_entry.has_parent?
              %li
                = render(:partial => 'navigation/node_name_page', :locals => { :hierarchy_entry => hierarchy_entry.parent })
                %ul.branch
                  = render(:partial => 'taxa/classifications_summary_minitree_node_with_children', :locals => {:hierarchy_entry => hierarchy_entry})
            - else # No ancestor, start with this node:
              = render(:partial => 'taxa/classifications_summary_minitree_node_with_children', :locals => {:hierarchy_entry => hierarchy_entry})
  - else
    .empty
      %p= I18n.t(:classifications_empty)
