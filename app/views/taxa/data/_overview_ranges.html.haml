- if ranges.blank?
  .empty
    %p= I18n.t(:taxon_data_empty)
- else
  .data_div
    %table.standard.data
      - ranges.each_with_index do |range_data, index|
        - row_class = (index == ranges.length - 1) ? 'last' : nil
        %tr{ :class => row_class }
          %th
            - if range_data[:attribute].is_a?(KnownUri)
              = link_to display_uri(range_data[:attribute], :span, capitalize: true), data_search_path(attribute: range_data[:attribute].uri, sort: 'desc', taxon_concept_id: @taxon_page.id)
            - else
              = display_uri(range_data[:attribute], :span, capitalize: true)
          %td
            - min_value = range_data[:min].object.round(2)
            - if range_data[:min].unit_of_measure != range_data[:max].unit_of_measure
              - uri_components = EOL::Sparql.explicit_measurement_uri_components(range_data[:min].unit_of_measure_uri)
              - min_value = min_value.to_s + " " + display_uri(uri_components)
            = raw [ min_value, display_text_for_data_point_uri(range_data[:max]) ].join(' - ')
