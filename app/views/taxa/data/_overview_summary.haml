-# TODO - I probably didn't mark all the places in this view where we've got business logic. The whole view needs consideration.
- values_to_show_per_row = 3
- rows_to_show = TaxonDataExemplarPicker.max_rows # TODO - remove this, but see below.
.data_div
  %table.standard.data
    %caption.assistive= I18n.t(:data_overview_table_caption)
    - @range_data.each_with_index do |range_data, index|
      - row_class = ((index == @range_data.length - 1) && @overview_data_point_uris.empty?) ? 'last' : nil
      %tr{ class: row_class }
        %th
          = display_uri(range_data[:attribute], capitalize: true)
        %td
          - min_value = range_data[:min].object.round(2)
          - if range_data[:min].unit_of_measure != range_data[:max].unit_of_measure
            - uri_components = EOL::Sparql.explicit_measurement_uri_components(range_data[:min].unit_of_measure_uri)
            - min_value = min_value.to_s + " " + display_uri(uri_components)
          = raw [ min_value, display_text_for_data_point_uri(range_data[:max]) ].join(' - ')
    - unless data_point_uris.empty?
      -# TODO - this logic should be in the "model" (even if the model is a hash/array):
      - grouped_attributes = data_point_uris.categorized
      - grouped_attributes.each_with_index do |(attribute, data_point_uris), index|
        - row_class = (index == grouped_attributes.keys.length - 1) ? 'last' : nil # TODO - you never need 'last' as a class. Use CSS.
        %tr{ class: row_class }
          %th= display_uri(attribute, capitalize: true)
          %td
            - text_for_rows = data_point_uris.sort.map do |data_point_uri|
              - display_text_for_data_point_uri(data_point_uri, link_to_overview: true)
            -# TODO - this stops at three... really, it should stop at 3 OR when we no longer have exemplars. But first:
            -# TODO - This should REALLY be in the model: we don't want the *view* hiding things, since we want curators to specify them!
            - if text_for_rows.length > values_to_show_per_row
              - text_for_rows = text_for_rows[0...values_to_show_per_row]
              - text_for_rows << link_to(I18n.t(:more),
                taxon_data_path(toc_id: (attribute.is_a?(KnownUri) && attribute.toc_items.length > 0) ?  attribute.toc_items.first.id : nil,
                anchor: attribute.is_a?(KnownUri) ? attribute.uri : attribute))
            = raw text_for_rows.join(", ").gsub(/<\/span>, /, ", </span>") # Clean up commas...
    - if grouped_attributes.keys.length > rows_to_show # TODO - this should be data_point_uris.more?
      .see_more
        = link_to(I18n.t(:see_more_on_the_data_tab), taxon_data_path)
