- editable = @collection.editable_by?(current_user)
= content_for :additional_page_actions do
  - if editable
    - unless @collection.community_id # You cannot create a community on a community focus list!
      %li= link_to I18n.t(:create_community), new_community_path(:collection_id => @collection), :class => 'button'
    %li= link_to I18n.t(:edit_collection), edit_collection_path(@collection), :class => 'button'
-# TODO ...
- if @collection_items.blank?
  #sidebar
    .collection_contributors
      = render :partial => 'collections/managed_by', :locals => { :collection => @collection }
    - if @collection.communities.count > 0
      .collection_contributors
        = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
  #collections.main_container
    .article
      .empty
        %p= I18n.t(:collection_is_empty)
        - if editable && ! @collection.special?
          = button_to I18n.t(:collection_delete_link), { :action => "delete", :collection_id => @collection.id }, :confirm => I18n.t(:collection_delete_link), :method => :delete
- else
  - form_options = { :html => {:method => :put} }
  - form_for(@collection, form_options) do |f|
    = hidden_field_tag(:filter, @filter) if @filter
    #tabs_sidebar
      = render :partial => 'collections/filter_by_item_type'
    #sidebar
      - if logged_in?
        .filters
          %h4= I18n.t(:actions)
          %fieldset.actions
            = select_tag :scope, options_for_select(@collection_item_scopes)
            - if editable && !@collection.is_resource_collection?
              -# NOTE - we use name because we don't want to handle the I18n of the button.
              = submit_tag I18n.t(:move),   :name => 'commit_move'
              = submit_tag I18n.t(:copy),   :name => 'commit_copy'
              = submit_tag I18n.t(:remove), :name => 'commit_remove'
            - else
              = submit_tag I18n.t(:copy), :name => 'commit_copy'
      .collection_contributors
        = render :partial => 'collections/managed_by', :locals => { :collection => @collection }
      - if @collection.communities.count > 0
        .collection_contributors
          = render :partial => 'collections/endorsed_by', :locals => { :collection => @collection }
    #collections.main_container
      - if @filter == 'newsfeed'
        .article.list.updates
          -# TODO - can't have a nested form, here:
          -# = render :partial => 'comments/new', :locals => {:parent => @collection}
          .heading
            %h3= I18n.t(:newsfeed)
          = render :partial => 'activity_logs/index', :locals => {:log => @collection.activity_log}
      - else
        .heading
          %fieldset
            = label_tag :sort_by, I18n.t(:sort_by_label)
            = select_tag :sort_by, options_for_select(@sort_options.map {|so| [so.name, so.id]}, @sort_by.id)
          %fieldset.actions
            = submit_tag I18n.t(:sort_by_button), :name => 'commit_sort'
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
        %ul.object_list
          - @collection_items.each do |item|
            - item_type = en_type(item)
            %li{:class => item_type}
              - if editable && !@collection.is_resource_collection?
                = render :partial => 'collection_items/edit', :locals => { :collection_item => item, :item_type => item_type, :parent_form => f}
              - else
                = render :partial => 'collection_items/show', :locals => { :collection_item => item, :item_type => item_type }
        = will_paginate @collection_results, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next), :inner_window => 2, :outer_window => 2
