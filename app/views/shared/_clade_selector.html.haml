:javascript
  if (!EOL) EOL = {};
  EOL.indicator_arrows_html = '#{image_tag('indicator_arrows_black.gif')}';
  EOL.clade_selector_id = '#{id}';
  EOL.clade_selector_input_name = '#{name}';
= javascript_include_tag 'navigation.js' # TODO - this should probably be done merged.
%div{ :id => id, :style => "display: inline;" }
  - input_type = (is_debug == true) ? 'text' : 'hidden'
  - input_value = (value) ? value.id : ''
  %input{ :type => input_type, :id => name, :name => name, :value => input_value }
    - if toggle
      %span#browser_show
        %a{:href => "##{id}-inner" }
          [
          = show_text
          ]
      %span#browser_hide{ :style => "display:none" }
        %a{:href => "##{id}-inner" }
          [
          = hide_text
          ]
      - if show_clear
        %span#browser_clear
          %a{ :href => "#" }
            [clear]
  - div_display = ( visible == true || value ) ? 'block' : 'none'
  %div{ :id =>"#{id}-inner", :style => "display: #{div_display};" }
    %ul.tree
      - for kingdom in hierarchy.kingdoms
        %li{ :id => "value_#{kingdom.id}", :class => "value_#{kingdom.id} kingdom" }
          = tree_entry_text(kingdom, selectable_clade_level, id)
          - if value and kingdom == value.kingdom
            - value.ancestors.shift
            = value.ancestors.map {|he| "<ul><li id='value_#{he.id}' class='value_#{he.id}'>" + tree_entry_text(he, selectable_clade_level, id) }
            %ul
              - for child in value.children
                %li{ :id => "value_#{child.id}", :class => "value_#{child.id}" }
                  = tree_entry_text(child, selectable_clade_level, id)
