- supress_reply ||= false
- truncate_comments ||= false
= link_to image_tag(item.user.logo_url(:small), :alt => I18n.t(:comment_show_posters_image_alt,
  :posters_name => h(item.user.full_name))), user_path(item.user), :class => 'avatar'
.details
  - name_with_link = link_to h(item.user.full_name), user_path(item.user)
  - parent_link = nil
  - parent_newsfeed = nil
  - case item.parent_type
  - when 'TaxonConcept'
    - parent_link = taxon_overview_path(item.parent)
  - when 'DataObject'
    - parent_link = data_object_path(item.parent)
  - when 'Community'
    - parent_link = community_path(item.parent)
  - when 'Collection'
    - parent_link = collection_path(item.parent)
  - when 'User'
    -# We placed a filter here to trap the error if user is deleted.
    - unless item.parent.nil?
      - parent_link = user_path(item.parent)
  %p
    - if parent_link
      = I18n.t(:user_commented_on_something_colon, :user => name_with_link, :what => link_to(item.parent.summary_name, parent_link))
    - else
      - unless item.parent.nil?
        = I18n.t(:user_commented_on_something_colon, :user => name_with_link, :what => item.parent.summary_name)
      - else
        = I18n.t(:user_commented_on_something_colon, :user => name_with_link, :what => I18n.t(:record_not_found))

  %blockquote{:cite => h(item.user.full_name)}
    - show_body = ''
    - if truncate_comments && item.body.length > 140
      - parent_newsfeed = nil
      - case item.parent_type
      - when 'TaxonConcept'
        - parent_newsfeed = taxon_updates_path(item.parent)
      - when 'DataObject'
        - parent_newsfeed = data_object_path(item.parent)
      - when 'Community'
        - parent_newsfeed = community_newsfeed_path(item.parent)
      - when 'Collection'
        - parent_newsfeed = filtered_collection_path(item.parent, 'newsfeed')
      - when 'User'
        - parent_newsfeed = user_newsfeed_path(item.parent)
      - if parent_newsfeed
        - show_body = truncate(item.body, :length => 140, :omission => I18n.t(:truncated_comment_omission, :link => parent_newsfeed))
      - else
        - show_body = truncate(item.body, :length => 140, :omission => I18n.t(:truncated_comment_omission_linkless))
    - else
      - show_body = item.body
    - if item.reply?
      - at_re = /@([^:]+):/
      - show_body = show_body.sub(at_re, '@' + link_to("\\1", "##{item.reply_to_type}-#{item.reply_to_id}") + ':')
    %p= sanitize show_body.balance_tags
  %p.meta
    = I18n.t(:time_ago, :time_passed => time_ago_in_words(item.updated_at))
    - unless supress_reply || ! item.user
      %span.reply= link_to(I18n.t(:reply), '#new_comment', :'data-reply-to' => item.user.full_name, :'data-reply-to-type' => item.class.name, :'data-reply-to-id' => item.id)
