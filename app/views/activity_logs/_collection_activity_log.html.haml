- actual_date ||= false
- display_curator ||= false
- translation_vars = {:scope => [:activity_logs, :collection_activity_log]}
- collection ||= nil
- user_type = 'user'
- if item.user.nil?
  - user_type = 'an_unknown_user'
- else
  - translation_vars[:user] = link_to(h(item.user.full_name), user_url(item.user),
    :style => 'color: #195184')
  - if display_curator && item.user.is_curator?
    - translation_vars[:user] = I18n.t(:user_full_name_with_curator, :user => translation_vars[:user],
      :curator_level => item.user.curator_level.label)
- collection_type = 'collection'
- if collection
  - collection_type = 'it'
- elsif item.collection.nil?
  - collection_type = 'an_unknown_collection'
- else
  - translation_vars[:collection] = link_to(item.collection.summary_name, collection_url(item.collection),
    :style => 'color: #195184')
- item_type = 'item'
- if item.collection_item.nil? || item.collection_item.object.nil?
  - item_type = 'an_unknown_item'
- else
  - translation_vars[:item] = link_to(item.collection_item.object.summary_name,
    link_to_item(item.collection_item.object), :style => 'color: #195184')
%p{:style => collection ? 'padding: 0 3em;' : nil}
  - case item.activity_id
  - when Activity.add_editor.id
    = I18n.t("add_editor.#{user_type}_of_#{collection_type}", translation_vars)
  - when Activity.create.id
    = I18n.t("create.#{user_type}_created_#{collection_type}", translation_vars)
  - when Activity.remove_all.id
    = I18n.t("remove_all.#{user_type}_cleared_#{collection_type}", translation_vars)
  - when Activity.remove.id
    = I18n.t("remove.#{user_type}_removed_#{item_type}_from_#{collection_type}", translation_vars)
  - when Activity.collect.id
    = I18n.t("collect.#{user_type}_added_#{item_type}_to_#{collection_type}", translation_vars)
  - else
    = I18n.t("other.#{user_type}_modified_#{collection_type}", translation_vars)
