- translation_vars = {:scope => [:activity_logs, :curator_activity_log]}
- translation_vars[:reasons] = item.untrust_reasons.map(&:label).to_sentence
- item.untrust_reasons.nil? ? [] : item.untrust_reasons.map(&:label)
- user_type = 'user'
- if item.user.nil?
  - user_type = 'an_unknown_user'
- else
  - translation_vars[:user] = link_to(h(item.user.full_name), user_url(item.user),
    :style => 'color: #195184')
- data_object_type = 'data_object'
- if item.data_object.nil?
  - data_object_type = 'an_unknown_data_object'
- else
  - translation_vars[:data_object] = link_to(item.data_object.summary_name, data_object_url(item.data_object),
    :style => 'color: #195184')
  - data_object_type = 'an_older_data_object' unless item.data_object.is_latest_published_version_in_same_language?
- language_type = 'language'
- if item.synonym.nil? || item.synonym.language.nil?
  - language_type = 'an_unknown_language'
- else
  - translation_vars[:language] = item.synonym.language.label
- association_type = 'association'
- if item.hierarchy_entry.nil? || item.hierarchy_entry.name.nil?
  - association_type = 'an_unknown_association'
- else
  - translation_vars[:association] = link_to(h(item.hierarchy_entry.name.string),
    taxon_url(item.hierarchy_entry.taxon_concept), :style => 'color: #195184')
- name_type = 'name'
- if item.synonym.nil? || ! item.synonym.respond_to?(:name)
  - association_type = 'an_unknown_name'
- else
  - translation_vars[:name] = item.synonym.name.string
- taxon_type = 'taxon'
- if item.taxon_concept.nil? || ! item.taxon_concept.is_a?(TaxonConcept)
  - taxon_type = 'an_unknown_taxon'
- else
  - translation_vars[:taxon] = link_to(item.taxon_concept.quick_scientific_name, taxon_url(item.taxon_concept),
    :style => 'color: #195184')
%p
  - case item.activity_id
  - when Activity.trusted.id
    = I18n.t("trusted.#{user_type}_trusted_#{data_object_type}_on_#{association_type}", translation_vars)
  - when Activity.untrusted.id
    = I18n.t("untrusted.#{user_type}_untrusted_#{data_object_type}_on_#{association_type}", translation_vars)
    - unless translation_vars[:reasons].empty?
      %p= I18n.t(:reasons_to_untrust, translation_vars)
  - when Activity.show.id
    = I18n.t("show.#{user_type}_showed_#{data_object_type}_on_#{association_type}", translation_vars)
  - when Activity.hide.id
    = I18n.t("hide.#{user_type}_hid_#{data_object_type}_on_#{association_type}", translation_vars)
    - unless translation_vars[:reasons].empty?
      %p= I18n.t(:reasons_to_hide, translation_vars)
  - when Activity.unreviewed.id
    = I18n.t("unreviewed.#{user_type}_unreviewed_#{data_object_type}_on_#{association_type}", translation_vars)
  - when Activity.add_association.id
    = I18n.t("add_association.#{user_type}_associated_#{data_object_type}_to_#{association_type}", translation_vars)
  - when Activity.remove_association.id
    = I18n.t("remove_association.#{user_type}_disassociated_#{data_object_type}_from_#{taxon_type}", translation_vars)
  - when Activity.choose_exemplar.id
    = I18n.t("choose_exemplar.#{user_type}_chose_exemplar_#{data_object_type}_on_#{taxon_type}", translation_vars)
  - when Activity.add_common_name.id
    = I18n.t("add_common_name.#{user_type}_added_#{name_type}_to_#{taxon_type}", translation_vars)
  - when Activity.remove_common_name.id
    = I18n.t("remove_common_name.#{user_type}_removed_name_from_#{taxon_type}", translation_vars)
  - when Activity.trust_common_name.id
    = I18n.t("trust_common_name.#{user_type}_trusted_#{name_type}_on_#{taxon_type}", translation_vars)
  - when Activity.untrust_common_name.id
    = I18n.t("untrust_common_name.#{user_type}_untrusted_#{name_type}_on_#{taxon_type}", translation_vars)
  - when Activity.unreview_common_name.id
    = I18n.t("unreview_common_name.#{user_type}_unreviewed_#{name_type}_on_#{taxon_type}", translation_vars)
  - else
    = I18n.t("other.#{user_type}_curated_#{data_object_type}", translation_vars)
