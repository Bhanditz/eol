- type_to_send_permalinks_for = [DataType.image.id, DataType.text.id] + DataType.video_type_ids

- if @agent_or_user.class == AgentContact
  =I18n.t("dear_var__agent_or_user_full_n", :var__agent_or_user_full_name => @agent_or_user.full_name, :var__agent_or_user_agent_full_name => @agent_or_user.agent.full_name)
- else
  = I18n.t("dear_var__agent_or_user_full_n_", :var__agent_or_user_full_name => @agent_or_user.full_name)
= ""

- if @agent_or_user.class == AgentContact  # the contact for a content partner
  =I18n.t("you_are_receiving_this_message")
  =I18n.t("for_more_detailed_information_")
  = url_for(:controller => 'content_partner', :action => 'login', :only_path => false, :host => $SITE_DOMAIN_OR_IP);
  = ""
  =I18n.t("then_go_to_usage_reports_")
  = url_for(:controller => 'content_partner', :action => 'reports', :only_path => false, :host => $SITE_DOMAIN_OR_IP);
  = ""
  =I18n.t("to_turn_off_or_change_how_ofte")
  = url_for(:controller => 'content_partner', :action => 'edit_contact', :id => @agent_or_user.id, :only_path => false, :host => $SITE_DOMAIN_OR_IP);
  = ""
  =I18n.t("if_you_have_trouble_accessing_")
  = url_for(:controller => 'contact_us', :default_subject => 'Content Partner Support', :only_path => false, :host => $SITE_DOMAIN_OR_IP);
- else  # a site user that has submitted content
  =I18n.t("to_turn_off_or_change_how_ofte_")
  = url_for(:controller => 'profile', :only_path => false, :host => $SITE_DOMAIN_OR_IP);
  = ""
  =I18n.t("if_you_have_trouble_accessing_")
  = url_for(:controller => 'contact_us', :default_subject => I18n.t("technical_problems__difficulti"), :only_path => false, :host => $SITE_DOMAIN_OR_IP);
= ""
= ""


-# Curator actions
- unless @activity.blank? || @activity[:actions].blank?
  ======================================
  - if @activity[:actions].length > 1
    =I18n.t("curator_actions_have_affected_")
  - else
    =I18n.t("a_curator_action_has_affected_")
  ======================================
  - for action in @activity[:actions]
    - data_object = action.data_object
    - taxon_concept = TaxonConcept.find(data_object.linked_taxon_concept.id)  # so we get superceded concepts
    - date = format_date_time(action.created_at,:format=>'short_no_tz')
    - url = nil
    - if type_to_send_permalinks_for.include?(data_object.data_type_id)
      - url = url_for(:controller => 'data_objects', :action => data_object.id, :only_path => false, :host => $SITE_DOMAIN_OR_IP)
    = "  #{date}"
    = "    #{taxon_concept.entry.name.string}"
    - if url
      = "    #{url}"
    = I18n.t(:action_taken_by_curator_for_email, :action => action.activity.name, :by => action['curator_username'])
    = "  -----"
    = ""
  = ""

-# Comments on their objects
- unless @activity.blank? || @activity[:object_comments].blank?
  ======================================
  - if @activity[:object_comments].length > 1
    =I18n.t("comments_were_left_on_data_obj")
  - else
    =I18n.t("a_comment_was_left_on_a_data_o")
  ======================================
  - for comment in @activity[:object_comments]
    - data_object = comment.parent
    - taxon_concept = TaxonConcept.find(data_object.linked_taxon_concept.id)  # so we get superceded concepts
    - date = format_date_time(comment.created_at,:format=>'short_no_tz')
    - url = nil
    - if type_to_send_permalinks_for.include?(data_object.data_type_id)
      - url = url_for(:controller => 'data_objects', :action => data_object.id, :only_path => false, :host => $SITE_DOMAIN_OR_IP)
    = "  #{date}"
    = "    #{taxon_concept.entry.name.string}"
    - if url
      = "    #{url}"
    = I18n.t("____from_user_var_comment__com", :var_comment__commenter_username__ => comment['commenter_username'], :var_comment_body_strip => comment.body.strip)
    = "  -----"
    = ""
  = ""

-# Comments on pages their objects are on
- unless @activity.blank? || @activity[:page_comments].blank?
  ======================================
  - if @activity[:page_comments].length > 1
    =I18n.t("comments_were_left_on_the_taxo")
  - else
    =I18n.t("a_comment_was_left_on_a_taxon_")
  ======================================
  - for comment in @activity[:page_comments]
    - taxon_concept = TaxonConcept.find(comment.parent_id)  # so we get superceded concepts
    - date = format_date_time(comment.created_at,:format=>'short_no_tz')
    - url = url_for(:controller => 'taxa', :action => 'show', :id => taxon_concept.id, :only_path => false, :host => $SITE_DOMAIN_OR_IP)
    = "  #{date}"
    = "    #{taxon_concept.entry.name.string}"
    = "    #{url}"
    = I18n.t("____from_user_var_comment__com", :var_comment__commenter_username__ => comment['commenter_username'], :var_comment_body_strip => comment.body.strip)
    = "  --------"
    = ""
  = ""

= ""
=I18n.t("thank_you_")
= ""
= I18n.t("encyclopedia_of_life")
