- content_for :social_sharing do
  = render :partial => 'shared/social_sharing'
#profile_saved_searches.main_container
  #background_processes.site_column
    -# TODO - pagination
    .article
      .header
        %h3= I18n.t('users.saved_searches.page_title')
      - if @background_processes.empty?
        .article.copy
          %p= raw I18n.t('users.saved_searches.empty', data_search_url: data_search_url)
      - else
        %table.standard
          %thead
            %tr.headers
              %th= I18n.t('users.saved_searches.attribute_head')
              %th= I18n.t('users.saved_searches.query_head')
              %th= I18n.t('users.saved_searches.updated_head')
              %th= I18n.t('users.saved_searches.row_count')
              %th= I18n.t('users.saved_searches.actions_head')
          %tbody
            - @background_processes.each do |process|
              %tr{ class: (process.complete? ? 'done' : 'pending') }
                %td= process.known_uri.name
                %td
                  - if process.q.blank?
                    %em= I18n.t('users.saved_searches.query_empty')
                  - else
                    = process.q
                %td= raw I18n.t(:time_ago, :time_passed => time_ago_in_words(process.updated_at))
                %td
                  - if process.complete?
                    = process.row_count
                  - else
                    %em= I18n.t('users.saved_searches.processing')
                %td
                  - if process.complete?
                    = link_to(I18n.t(:delete), user_saved_search_path(process.user, process), method: :delete, confirm: I18n.t(:are_you_sure))
                    &bull;
                    = link_to(I18n.t('users.saved_searches.download'), process.hosted_file_url)
                    &bull;
                    = link_to(I18n.t('users.saved_searches.refresh'), refresh_user_saved_search_path(process.user, process))
                  - else
                    = link_to(I18n.t(:cancel_and_delete), user_saved_search_path(process.user, process), method: :delete, confirm: I18n.t(:are_you_sure))
        - if defined?(Resque) && Resque && Resque.info && i = Resque.queues.index("data")
          .article.copy
            %p= raw I18n.t(:data_search_queue_pending, count: Resque.size(Resque.queues[i]), data_search_url: data_search_url)
