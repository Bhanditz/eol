- if !logged_in? && $ALLOW_USER_LOGINS
  %p
    %strong
      =I18n.t("you_must_be")
      = link_to(I18n.t("logged_in_"), login_path(:params => {:return_to => request.env["HTTP_REFERER"].blank? ? root_url : URI.parse(request.env["HTTP_REFERER"]).path}), {:class => 'login_link'} )
      =I18n.t("to_post_comments")
- elsif logged_in?
  %h2
    =I18n.t("add_a_new_comment")
  - form_remote_for([@parent, @comment], :html => {:id => nil, :style => 'margin-top:0;'}) do |f|
    - comment_id = "comment_body_#{@parent.id}"
    - submit_id = "submit_comment_#{@parent.id}"
    = hidden_field_tag :body_div_name, body_div_name
    = f.text_area :body, :rows => length, :cols => 50, :id => comment_id
    %p
      %span.error{ :id => "#{@parent.id}_comment_error", :style => "display:none;" }
        Comment should not be empty.
    = submit_tag(I18n.t("post_comment"), |
      :id => submit_id, |
      :exception => 'alert("Yay");', |
      :class => 'post_comment')  |
    = image_tag('indicator_arrows_black.gif', :id => "#{submit_id}_spinner", :style=>'display:none;')
    -# This additionally submits the form because Safari seems to cancel the event anyway!  (Worked fine in FF.)
    :javascript
      $('##{submit_id}').click(function() {
        if ($.trim($('##{comment_id}').val()) == "") {
          $('##{@parent.id}_comment_error').show();
          return false;
        }
        if($('##{@parent.id}_comment_error').is(":visible")) $('##{@parent.id}_comment_error').hide();
        $(this).val('#{ I18n.t(:please_wait) }');
        $(this).attr('disabled', 'disabled');
        $('##{submit_id}_spinner').fadeIn();
        var form = $(this).closest('form');
        $.ajax({
          url: form.attr('action'),
          type: 'POST',
          data: form.serialize()
        });
        return false;
      });
