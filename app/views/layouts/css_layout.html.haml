!!! XML
!!! 5
%html{ "xml:lang" => I18n.locale, :lang => I18n.locale, :xmlns => "http://www.w3.org/1999/xhtml",
  'xmlns:fb' => $ENABLED_SOCIAL_PLUGINS && $ENABLED_SOCIAL_PLUGINS.include?(:facebook) ? "http://ogp.me/ns/fb#" : nil,
  'xmlns:og' => $ENABLED_SOCIAL_PLUGINS && $ENABLED_SOCIAL_PLUGINS.include?(:facebook) ? "http://ogp.me/ns#" : nil }
  %head
    - @meta_data ||= meta_data
    %title<
      = h(raw(strip_tags(@meta_data[:title])))
    %meta{ :charset => "utf-8" }
    - # HTML4 charset declaration, might go when browsers catch up with html5
    %meta{ :content => "text/html; charset=utf-8", "http-equiv" => "Content-type" }
    - unless @meta_data[:description].blank?
      %meta{ :name => "description", :content => h(raw(truncate(strip_tags(@meta_data[:description]), :length => 160))) }
    - unless @meta_data[:keywords].blank?
      %meta{ :name => "keywords", :content => h(raw(strip_tags(@meta_data[:keywords]))) }
    - # Google Webmaster Tools verification. Must persist to maintain verified ownership.
    - Rails.configuration.google_site_verification_keys.each do |key|
      %meta{ name: 'google-site-verification', content: key }
    - # Prevents generation of links to "smart tags"
    %meta{ :name => "MSSmartTagsPreventParsing", :content => "true" }
    - full_version = ENV["APP_VERSION"].blank? ? I18n.t(:development_version_name) : ENV["APP_VERSION"]
    %meta{ :name => "app_version", :content => full_version }
    - if $ENABLED_SOCIAL_PLUGINS && $ENABLED_SOCIAL_PLUGINS.include?(:facebook) && $FACEBOOK_APP_ID
      %meta{ :property => "fb:app_id", :content => $FACEBOOK_APP_ID }
    - if $PINTEREST_VERIFICATION_CODE
      %meta{ :name => "p:domain_verify", :content => $PINTEREST_VERIFICATION_CODE }

    - if @no_cache
      %meta{ :content => "NO-CACHE", "http-equiv" => "CACHE-CONTROL" }
      %meta{ :content => "NO-CACHE", "http-equiv" => "PRAGMA" }

    = yield :head_meta
    - unless @rel_canonical_href.blank?
      %link{ :href => @rel_canonical_href, :rel => "canonical" }
    - unless @rel_prev_href.blank?
      %link{ :href => @rel_prev_href, :rel => "prev" }
    - unless @rel_next_href.blank?
      %link{ :href => @rel_next_href, :rel => "next" }
    = favicon_link_tag 'favicon.ico'
    %link{ :href => "/opensearchdescription.xml", :title => I18n.t("encyclopedia_of_life"), :rel => "search", :type => "application/opensearchdescription+xml" }

    = stylesheet_include_i18n_merged 'application_pack', :media => "all"
    /[if IE 7]
      = stylesheet_include_i18n_merged 'ie7', :media => "all"
    -# TODO - Try loading jQuery from a CDN like http://code.jQuery.com/jQuery-latest.min.js …Though I don’t want to use “latest”. … :)

    = javascript_include_tag 'application'

    = csrf_meta_tags

    = yield :head
  %body{:class => @home_page ? 'home' : nil}
    - unless @home_page
      - # For accessibility and SEO on pages other than home page we want content to appear first in the markup.
      #central
        .section{ :role => "main" }
          /========================
          = yield :main
          /========================
