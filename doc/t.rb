# This is a temp file used for notes. Ignore it entirely!

dids = [32156710, 31374001, 30100518, 13464719, 31920917, 19183400, 24930168,
13445391, 26500099, 29903653, 30073527, 31310304, 27192038, 5826948, 1999648,
28461506, 24919589, 20059071, 20048020, 30110263, 21936779, 13144812, 20074943,
20074940, 20074936, 20074938, 20075914, 25807805, 26500098, 30108868, 30103367,
1999823, 30110494, 18110856, 22824791, 26691579, 26691807, 25793763, 30103305,
1999747, 30104809, 25793747, 5820768, 5820769, 30103947, 30110281, 30103292,
30104617, 30105792, 30104013, 5830203, 13464724, 26560666, 24869993, 27019079,
27019082, 5820686, 27010415, 20061488, 20061485, 20063364, 20057810, 31858830,
21936777, 24973837, 19206803, 27375418, 25807361, 23861348, 31833642, 28666071,
28666492, 27148757, 30103704, 30101353, 5820717, 29895333, 22890297, 12460061,
30103713, 30104801, 30101215, 5827020, 30110492, 30107708, 30106448, 30110288,
30103298, 27000783, 5820680, 1999668, 27192806, 5820662, 5820663, 24869992,
27843311, 23224978, 20054937, 30105942, 30109445, 20074959, 20074956, 20835665,
22824742, 30103547, 30103546, 17271282, 13464730, 1999751, 30101798, 30103449,
30101735, 30101756, 30103315, 21075894, 11379067, 30263755, 23569250, 11389064,
29961984, 30103709, 30103460, 30106943, 27332065, 27186748, 26466371, 26466258,
24871776, 13464747, 24947263, 13464750, 1999938, 30104054, 22337289, 30101861,
30103352, 30104610, 28461505, 28461503, 28461364, 25782734, 30103728, 30105960,
32704248, 29875360, 24930166, 25805408, 30103549, 25805406, 32073860, 30110291,
24979220, 30101255, 30103594, 30103595, 30103407, 30235723, 30103319, 30106421,
27192802, 26087297, 24874033, 2004321, 29203494, 30110260, 26779607, 26781232,
26086739, 30105026, 28461359, 1999655, 1999658, 22831981, 5820655, 1999690,
32154234, 28716738, 26260390, 26217713, 1999694, 26260665, 30106422, 13464722,
25167314, 25167306, 25167319, 32436676, 11558954, 29441154, 27377855, 27695523,
27114160, 29166408, 25084993, 30106294, 5823456, 5823457, 30101367, 20045502,
30101755, 30101757, 31553664, 29868738, 25787661, 30108829, 1999619, 31310305,
30263741, 19183407, 27192021, 27843323, 31467296, 32436677, 27843312, 19169149,
27715330, 31833643, 30104724, 21535493, 26390165, 19145558, 1999762, 1999763,
1999706, 26854286, 23024678, 26560667, 27192803, 27192807, 30263756, 30108220,
30105920, 22337290, 30101860, 30105819, 30103312, 30110270, 30110293, 30106182,
30109674, 30104588, 30109708, 25784842, 20046313, 11566119, 11566720, 20048547,
26999358, 11557122, 26999714, 27000279, 28461501, 30108960, 29206742, 25806326,
24878573, 26875792, 5826647, 31330095, 11556383, 30110273, 30110289, 30103733,
30104521, 30110280, 30108407, 30108730, 30108117, 30109064, 27383141, 27383142,
24889280, 24992082, 30103082, 30103092, 30104138, 30107496, 30108037, 30108038,
30110290, 1999712, 27708817, 27708818, 27708822, 30109035, 30110259, 32079757,
25597097, 30106272, 30110368, 1999328, 30104480, 30104569, 30104928, 30105044,
30105153, 30105294, 30106449, 30110294, 30106447, 5820739, 13464721, 30103596,
30104568, 30103408, 30104618, 30105793, 30106114, 30103397, 18030902, 18097007,
18022528, 26260366, 26260367, 18104126, 18098092, 1999691, 26217736, 26217715,
26260391, 30105198, 30104602, 30110287, 30108435, 26086741, 5820683, 27192808,
27019414, 30106354, 30106355, 5820660, 32158931, 30108182, 30108265, 13144811,
9003759, 20094294, 25043348, 25043349, 11563911, 31858855, 11560460, 29961073,
9003814, 9003815, 20071725, 20071727, 20071728, 20071729, 20071805, 20071812,
11554168, 30103940, 30106183, 20835666, 18033614, 18033615, 30106270, 30105844,
22891153, 22891154, 22891155, 22891156, 22891129, 22891130, 22891131, 22891132,
22891133, 22891134, 22891135, 22891157, 30106944, 30106945, 30109579, 27939292,
26177617, 26384856, 30103287, 30103378, 30103879, 30104028, 30105088, 30106563,
30105154, 30107713, 11386362, 18037900, 11389013, 30103980, 30103981, 26466657,
12459584, 26464800, 26464819, 32811053, 26464838, 26464844, 26464850, 26464862,
26464868, 26464874, 21535492, 21535494, 26390164, 11371949, 13154374, 11372900,
26533901, 26464690, 11386968, 15250043, 26464542, 11392199, 11392201, 26691651,
11383418, 13464728, 30104343, 30107744, 30107842, 30108308, 30110266, 30110298,
25801481, 30108358, 30106004, 1999758, 1999759, 1999760, 11380888, 11383897,
32159104, 30101709, 11381964, 13464723, 30263742, 30104786, 30103284, 30102978,
31735407, 30107768, 30103209, 30106323, 11383293, 27192022, 13445276, 30103414,
30106115, 30103320, 30106436, 30109673, 30110504, 26260664, 11390736, 30103360,
30072400, 22824005, 19149207, 19149231, 32590022, 22829956, 26443044, 25805398,
1999670, 5820688, 23024679, 27192804, 27019083, 22822004, 22822013, 5820676,
22830451, 11553811, 11554771, 11554772, 11554775, 11554780, 11561110, 20078863,
20078865, 20049538, 11558514, 11559376, 11559410, 20049007, 20049016, 20059188,
11561576, 11561584, 11564185, 30103215, 30103218, 22891128, 22891136, 22891149,
22891150, 22891151, 22891152, 13464725, 30103548, 23861349, 26087001, 31833644,
1999963, 13464751, 11377693, 30104064, 30108692, 30105979, 30105980, 30106268,
26217850, 18053026, 18052964, 18115299, 18009563, 18107607, 18062098, 30108125,
12459393, 12459463, 11394379, 11383780, 11383790, 26464618, 26464636, 26464684,
25794171, 1999861, 1999858, 5820705, 19174590, 30104512, 25580824, 29895332,
26177778, 14859459, 15661823, 15661858, 15250058, 23477446, 15250048, 11384059,
30104240, 30105662, 30104552, 30104553, 30104806, 30104808, 30104810, 30104811,
30104812, 30105667, 25812021, 11380890, 11380927, 11383896, 30102975, 30102976,
30103054, 30103074, 30103299, 30103455, 30104027, 5827022, 19163109, 27843324,
5820762, 5820763, 5820770, 30110277, 30105208, 30104612, 30104026, 25805400,
32156403, 32156404, 30773386, 24908172, 24908699, 25152611, 13446712, 25805402,
30107497, 26744337, 26744347, 13447157, 13447337, 5820669, 23224718, 23224720,
11380998, 30109641, 1999661, 28461508, 11554256, 20081433, 11560704, 11568018,
24683400, 11558563, 20071724, 11559803, 22773634, 11557823, 24675851, 11557488,
11557517, 11567964, 20066147, 20076789, 1999779, 1999782, 13612123, 13612124,
13612125, 22891143, 22891127, 11386262, 30103220, 30105551, 26500096, 27736827,
27192893, 25807787, 25004741, 25004742, 30106861, 30106862, 30107745, 30109519,
1999964, 30108690, 30108691, 30108693, 30105437, 30105027, 30105661, 30104787,
30105078, 30101352, 30106275, 30110320, 5829022, 5829023, 26260246, 18116928,
30298068, 18103761, 11383034, 11383035, 26470916, 26464963, 26465031, 26465055,
26465165, 26465190, 26470931, 26470935, 26470989, 26464782, 13464732, 1999764,
1999765, 1999768, 30107657, 30107658, 1999750, 1999748, 30108372, 1999752,
30105668, 30105679, 30106173, 30106174, 30107454, 30107673, 30263757, 11394378,
11389030, 13464744, 11383296, 11383297, 30107777, 30107778, 30108031, 30108064,
30108065, 26465981, 26465193, 26465191, 26466604, 11383260, 11383263, 11384346,
11389024, 11389004, 30103064, 30103065, 11384021, 11389022, 11383782, 11383903,
30104135, 30107660, 25763532, 24930163, 30103196, 30104269, 30104270, 30105268,
30105345, 30105366, 30109033, 30109572, 30108773, 30109036, 30108333, 30108687,
30108696, 30103550, 30103551, 30109037, 30109560, 30109578, 30110265, 30110299,
30102849, 30110274, 11381763, 11381764, 30103353, 25812697, 30103056, 30105716,
30103960, 30105419, 13464742, 26803876, 30103726, 30103727, 30108219, 30107878,
26464587, 26466188, 26465196, 32153822, 1999831, 12487356, 27870157, 27870504,
12459841, 27008009, 30103357, 30104542, 30104543, 30110286, 25763526, 30108772,
5824711, 5824715, 5824724, 24981140, 30107376, 30107521, 24992704, 23225158,
26390376, 30103194, 30104664, 11377948, 30103936, 30105790, 30105791, 30110258,
22337291, 30104056, 11380861, 30108339, 30108340, 30104611, 19188481, 25397691,
27969583, 29805436, 30067615, 32230590, 23421658, 29206356, 31485467, 32229027,
28460723, 30102973, 31851738, 1999868, 27703310, 13445409, 30102974, 30103076,
30105443, 29962041, 31641615, 30104520, 30105673, 30108215, 30101708, 30110271,
30103462, 30103718, 30103451, 30103456, 30103274, 30103679, 30108218, 30104589,
30108721, 30103686, 30107008, 30110490, 30104271, 1999766, 30103605, 30792961,
31424086, 24731450, 24799389, 24799390, 27382880, 27383148, 27383149, 27383150,
27383151, 26562852, 26386480, 26531537, 26531538, 26531723, 26531724, 26531912,
25939581, 25939582, 25939776, 26245716, 25754161, 25754162, 32323656, 32323657,
32323658, 32332176, 32302874, 32302881, 32302995, 32310974, 32293462, 32296122,
32296125, 32297693, 32297712, 32297713, 32297714, 32275461, 32279144, 32280660,
32285012, 29683810, 29169643, 29221446, 29805527, 29836335, 29837672, 29839802,
30296063, 30772508, 30772509, 30773134, 30799615, 30804202, 32228123, 32228126,
32231664, 31467347, 32238086, 32242483, 32250139, 31516907, 31518412, 31518729,
32067578, 32067579, 32067580, 32067581, 32067582, 32067583, 32067584, 32067585,
32067586, 32067587, 32067588, 32067673, 32067674, 32067675, 32067676, 32067677,
8541648, 8541649, 8541650, 29605438, 29605439, 29605440, 29605441, 29605442,
29605443, 29605444, 29605445, 29605446, 29605447, 29605448, 29605449, 29605450,
29605451, 21072712, 21072713, 21072714, 21072717, 21072718, 21072719, 21072720,
21072723, 21072724, 21072725, 21072728, 21072729, 21072730, 31830132, 31830133,
31830459, 31830460, 5827658, 5827659, 5827660, 5827661, 5827662, 5827663,
5827664, 5827665, 24888653, 24951769, 31643621, 5823462, 5826949, 12528546,
12528705, 12528881, 12529251, 13161459, 19163682, 19163683, 19163684, 19163685,
19163686, 19163687, 19163688, 19163689, 22817080, 22817081, 22817082, 22822735,
22822736, 22822737, 22822738, 22822739, 22822740, 22822741, 22822742, 22822743,
22822744, 24258897, 24987151, 26162732, 26162733, 26162734, 26162735, 26162736,
26162737, 26162738, 26992856, 26992857, 27480471, 28400558, 30216183, 30216184,
31424072, 31424073, 31424074, 32787553, 32787554, 32787555, 32787557, 32788226,
32788227, 26162585, 26162586, 26162587, 31681996, 31681997, 31681998, 31681999,
31682000, 31682001, 31682002, 31682003, 31682004, 31682005, 31682006, 31682007,
31682008, 31682009, 31682010, 31682011, 31682012, 31682061, 31682062, 29882982,
24874959, 24874960, 26253290, 27435251, 29893119, 19174262, 31875304, 29893372,
29893373, 29893374, 29893375, 19157024, 19157025, 19157026, 19157027, 19157028,
19157029, 19157030, 12488608, 19157031, 19157032, 19157033, 19157034, 19167877,
19167878, 19167879, 19167880, 19167881, 19167882, 19167883, 19167884, 19167885,
19167886, 19188476, 19188477, 19188478, 19188479, 22781005, 22781006, 22781007,
22781025, 19188480, 22795810, 22795811, 22795812, 22795895, 22795928, 22795929,
22796064, 32154124, 22795813, 22795814, 22795815, 22795816, 22796065, 22796241,
22796242, 22796243, 22796277, 22796292, 22795817, 22795894, 22796278, 22796279,
22796280, 22796281, 22796282, 22796283, 24762826, 24762827, 24762828, 31518407,
31518435, 31518436, 24988270, 32229022, 29294667, 29903772, 29903994, 30796904,
28438790, 27109719, 27109720, 32343416, 29223217, 30799632, 30799633, 31436829,
32249957, 13446717, 13446718, 13446719, 13446720, 13446721, 13446722, 22827742,
22827743, 22827744, 22827745, 22827746, 30106865, 11387312, 32252156, 32252157,
32252297, 32253289, 32253290, 32253291, 32254231, 32254232, 32254542, 28438774,
28438775, 11387314, 12528599, 1999711, 1999714, 24905346, 24905347, 24907174,
24907175, 25002906, 25597135, 11387313, 31524142, 31524143, 31524405, 31524406,
31524407, 31524408, 31524409, 31526137, 32252146, 27382450, 17271291, 17271292,
21947588, 21947589, 21947590, 21947591, 32188322, 1999709, 32258952, 32259478,
32259479, 32261053, 32261054, 32261055, 32188155, 29836287, 22888974, 32255917,
32256362, 32256363, 32256454, 32256455, 32256629, 32257329, 32258348, 32258884,
32254652, 32254665, 32254666, 32254676, 32254677, 32255059, 32255221, 32255716,
32254543, 11387311, 31523955, 31523956, 25800299, 25779371, 25809972, 26796807,
26851658, 26876930, 25597136, 25597137, 26808319, 29836482, 30236031, 17271293,
27673739, 30059308, 30059312, 31464468, 32187184, 32682359, 31399035, 31399036,
31399037, 31399038, 31399039, 31399040, 11394156, 11394157, 11394158, 11394159,
11394160, 11394173, 11394174, 11394175, 11394176, 14859932, 14859933, 13612129,
13612130, 13612131, 13612132, 13612133, 13612146, 13612147, 12519576, 13612170,
13612171, 13612172, 13612194, 13612195, 13612196, 13612197, 13612198, 13612199,
13612292, 13612293, 13612294, 13612295, 13612330, 13612331, 13612332, 13612333,
13612334, 11386227, 11386228, 11386229, 11386230, 11386700, 11386701, 11386702,
11386703, 32320902, 32320903, 11382415, 11382416, 11382417, 11382418, 11382419,
17745001, 11377667, 11377668, 11377669, 11377670, 11377671, 11377672, 11377673,
11377674, 11377675, 11377695, 11377696, 11377697, 11377698, 11377699, 11377700,
11377701, 11377702, 11377703, 11378933, 11378934, 11378935, 11378936, 11378937,
11378938, 11378939, 11378940, 11378941, 1999629, 1999626, 1999627, 1999628,
22787656, 22787657, 22787658, 22787659, 22787660, 22787661, 19190821, 19190822,
19190823, 31422645, 22884978, 22884979, 11381395, 11381396, 11381397, 11381398,
11381399, 11381400, 11381419, 11381420, 11381421, 11381422, 11381423, 11381424,
11381425, 11381426, 11381427, 5924423, 5924424, 5924425, 5924426, 5924427,
5924428, 5924429, 5924430, 5924405, 5924449, 5924450, 5924451, 5924452, 5924453,
5924454, 5924455, 5924456, 5924457, 5924476, 5924477, 5924478, 5924479, 5924480,
5924481, 5924482, 5924483, 5924484, 11386723, 11386724, 11386725, 11386713,
11386714, 11386715, 11386716, 22823973, 22823974, 22823975, 22823976, 22823977,
22823978, 22823979, 22823980, 22823981, 11387070, 13612579, 13612580, 13612581,
29682149, 29682150, 29682151, 29682152, 13237210, 13237211, 13237212, 13237213,
13237214, 13237215, 13237216, 13237217, 13612582, 13447537, 13447538, 22815355,
22815356, 19142441, 19142442, 26999695, 22792715, 22792716, 22792717, 22792718,
22792719, 22792720, 22792721, 22792722, 22792723, 22824565, 22824566, 22824567,
22824568, 22824783, 22824784, 22824785, 22824786, 22824787, 11384058, 11384060,
11384061, 11384062, 11383781, 11384081, 11384082, 11384083, 11384084, 11384085,
11384086, 11384087, 11384088, 11384089, 11384107, 11384108, 11384109, 11384110,
11384111, 11384112, 11384113, 11384114, 11384115, 11384134, 11384135, 11384136,
11384137, 11384138, 11384139, 11384140, 11384141, 11384142, 11571642, 11571643,
12459601, 12459602, 12459603, 12459604, 12459605, 12459606, 12459607, 12459608,
12459609, 12459628, 12459629, 12459630, 12459631, 12459632, 12459633, 12459634,
12459635, 12459636, 11571172, 11571173, 11571174, 11571175, 11571176, 11571177,
11571178, 11571179, 11571180, 27012180, 27012181, 27012182, 27012183, 26998675,
26998676, 26998677, 26998678, 27012184, 11373706, 11373707, 11373708, 11373709,
11373710, 11373711, 11373712, 11373713, 11373714, 11378148, 11378149, 11378150,
11378151, 11378152, 11378153, 11379427, 11379428, 11379429, 11379448, 11379449,
11379450, 11379451, 11379452, 11379453, 11379454, 11379455, 11379456, 11379475,
11379476, 11379477, 11379478, 11379479, 11379480, 11379481, 11379482, 11379483,
14858881, 19188851, 19188852, 11571576, 11571577, 11392200, 11392202, 22522948,
22522952, 26588473, 12459925, 12459923, 12459924, 12459926, 12459927, 12459903,
12459904, 11571384, 11571385, 11374165, 11374166, 11374167, 11374168, 11374169,
12459937, 11382369, 32292017, 32292019, 11376969, 11376970, 11376971, 11376972,
11376973, 11376974, 11376975, 11376976, 11376977, 11381454, 11381455, 11381456,
11381457, 11381458, 11381459, 11381460, 11381461, 11381462, 11381481, 11381482,
11381483, 11381484, 11381485, 11381486, 11381487, 11381488, 11381489, 19174592,
19174593, 5820639, 22834352, 22834353, 22834354, 22834355, 22834356, 5820640,
11377716, 11377717, 11377718, 11377719, 11377720, 11377721, 11377722, 11378132,
11378165, 11378166, 11378167, 11378168, 11378169, 11378170, 11378171, 11378172,
11378264, 11378265, 11378266, 11378267, 11378268, 11378269, 11378270, 11378271,
11378272, 11378291, 11378292, 11378293, 11378294, 11378295, 11378296, 11378297,
11378298, 11378299, 11383366, 11383367, 11383368, 11383369, 11383370, 11383371,
11383372, 11383373, 11383374, 11374056, 11374057, 11374058, 11374059, 11374060,
11374061, 11374062, 11374063, 11374064, 11374083, 11374084, 11374085, 11374086,
11374087, 11374088, 11374089, 11374090, 11374091, 11394133, 11394134, 11394151,
11394152, 11394153, 11394154, 11394155, 27931103, 27931104, 11394177, 11394178,
11394179, 11394180, 11394181, 11394182, 11394183, 11394184, 11394185, 13612646,
13612531, 13612481, 13612482, 11386732, 11387293, 11387294, 13612159, 13612162,
13612163, 13612164, 13612165, 13612166, 13612167, 13612168, 13612169, 13612235,
13612282, 13612283, 13612284, 13612285, 13612286, 13612287, 13612288, 13612289,
32320912, 32259033, 32259034, 32259132, 11377647, 11377648, 11377649, 11377650,
11377651, 11377652, 11377653, 11377654, 11377655, 11377656, 11377657, 11377676,
11377677, 11377678, 11377679, 11377680, 11377681, 11377682, 11377683, 11377684,
11377704, 11377705, 11377706, 11377707, 11377708, 11377709, 11377710, 11377711,
11377712, 11378942, 11378943, 11378944, 11378945, 11378946, 11378947, 11378948,
11378949, 11378950, 1999620, 1999621, 1999622, 1999623, 1999624, 1999625,
5820646, 5820647, 5830190, 22787662, 22787663, 22883047, 22883048, 22883049,
22883050, 22883051, 22883052, 22884968, 11381428, 11381429, 11381430, 11381431,
11381432, 11381433, 11381434, 11381435, 11381436, 11381401, 11381402, 11381403,
11381404, 11381405, 11381406, 11381407, 11381408, 5924398, 5924399, 5924400,
5924401, 5924402, 5924403, 5924404, 5924440, 5924441, 5924442, 5924443, 5924444,
5924445, 5924446, 5924447, 5924448, 5924467, 5924468, 5924469, 5924470, 5924471,
5924472, 5924473, 5924474, 5924475, 22818952, 22818953, 22823971, 22823972,
1999820, 1999821, 11387290, 11387291, 11387292, 13612525, 13612526, 13612527,
13612528, 13612529, 13612530, 11387071, 11387072, 11387317, 11387305, 11387306,
11387307, 11387308, 11387309, 11387310, 13612583, 13612584, 31380754, 13145565,
20835521, 26999686, 26999687, 26999688, 26999689, 26999690, 26999691, 26999692,
26999693, 26999694, 12530237, 22792657, 22792658, 22792659, 22792660, 22792712,
22792713, 22792714, 29683849, 22792733, 22792734, 22792735, 22792736, 22824560,
22824561, 22824562, 22824563, 22824564, 1999635, 1999636, 1999637, 11384072,
11384073, 11384074, 11384075, 11384076, 11384077, 11384078, 11384079, 11384080,
11384098, 11384099, 11384100, 11384101, 11384102, 11384103, 11384104, 11384105,
11384106, 11384125, 11384126, 11384127, 11384128, 11384129, 11384130, 11384131,
11384132, 11384133, 11571633, 11571634, 11571635, 11571636, 11571637, 11571638,
11571639, 11571640, 11571641, 12459592, 12459593, 12459594, 12459595, 12459596,
12459597, 12459598, 12459599, 12459600, 12459619, 12459620, 12459621, 12459622,
12459623, 12459624, 12459625, 12459626, 12459627, 22890981, 22890983, 22891027,
11571166, 11571167, 11571168, 11571169, 11571170, 11571171, 11383269, 11371986,
11371987, 11373695, 11373696, 5820702, 11372207, 11373131, 27012185, 27012186,
11378133, 11378134, 11378135, 11378136, 11378137, 11378138, 11379430, 11379431,
11379432, 11379433, 11379434, 11379435, 11379436, 11379437, 11379438, 11379457,
11379458, 11379459, 11379460, 11379461, 11379462, 11379463, 11379464, 11379465,
11379484, 11379485, 11379486, 11379487, 11379488, 11379489, 11379490, 11379491,
11379492, 11571566, 11383415, 11383416, 11383417, 11392203, 11392204, 11392205,
11392206, 11392207, 11392208, 11392209, 11392210, 11392211, 11382346, 11382347,
11382348, 11571381, 11571382, 11571383, 11384354, 12459910, 11382327, 11382328,
11382353, 11384353, 11382372, 11382373, 11382374, 11374179, 11374180, 11374181,
11374182, 11374183, 32292013, 32292014, 32292015, 32292016, 11376952, 11376953,
11376954, 11376955, 11376956, 11376957, 11376958, 11376959, 11381441, 11381442,
11381443, 11381444, 11376978, 11376979, 11376980, 11376981, 11381463, 11381464,
11381465, 11381466, 11381467, 11381468, 11381469, 11381470, 11381471, 11381490,
11381491, 11381492, 11381493, 11381494, 11381495, 11381496, 11381497, 11381498,
11378126, 11378127, 11378128, 11378129, 11378130, 11378131, 11377732, 11377733,
11377734, 11378263, 11378182, 11378183, 11378184, 11378185, 11378186, 11378187,
11378188, 11378189, 11378282, 11378283, 11378284, 11378285, 11378286, 11378287,
11378288, 11378289, 11378290, 11383357, 11383358, 11383359, 11383360, 11383361,
11383362, 11383363, 11383364, 11383365, 11374047, 11374048, 11374049, 11374050,
11374051, 11374052, 11374053, 11374054, 11374055, 11374074, 11374075, 11374076,
11374077, 11374078, 11374079, 11374080, 11374081, 11374082, 27931102, 14859931,
11394186, 11394187, 11394188, 12583097, 14859775, 14859777, 14859778, 12583211,
11386260, 11386731, 13612148, 13612149, 13612150, 13612151, 13612152, 13612153,
13612154, 13612157, 13612158, 13612200, 13612215, 13612216, 13612217, 13612218,
13612219, 13612220, 13612221, 13612234, 13612335, 13612338, 13612339, 13612340,
11386699, 11386261, 11386263, 11386231, 11386232, 11386233, 11386275, 11386276,
11386277, 11382414, 25478360, 25478361, 25478362, 11377658, 11377659, 11377660,
11377661, 11377662, 11377663, 11377664, 11377665, 11377666, 11377685, 11377686,
11377687, 11377688, 11377689, 11377690, 11377691, 11377692, 11377694, 11378927,
11378928, 11378929, 11378930, 11378931, 11378932, 11377713, 11377714, 11377715,
11378951, 11378952, 11378953, 11378954, 11378955, 11378956, 11378957, 12528368,
5820648, 19190814, 19190815, 19190816, 19190817, 19190818, 19190819, 19190820,
22884969, 22884970, 22884971, 22884972, 22884973, 22884974, 22884975, 22884976,
22884977, 11381410, 11381411, 11381412, 11381413, 11381414, 11381415, 11381416,
11381417, 11381418, 5924431, 5924432, 5924433, 5924434, 5924435, 5924436,
5924437, 5924438, 5924439, 5924458, 5924459, 5924460, 5924461, 5924462, 5924463,
5924464, 5924465, 5924466, 5924491, 5924492, 5924493, 5924485, 5924486, 5924487,
5924488, 5924489, 5924490, 11386808, 11386809, 11386726, 11386727, 11386728,
11386729, 11386730, 11387285, 11387286, 11387318, 11387319, 11387320, 21073904,
21073905, 13237209, 13145015, 22825284, 22825285, 22825286, 22825287, 22825288,
22825289, 22825290, 26987182, 26987183, 26987184, 26999680, 26999681, 26999682,
26999683, 26999684, 26999685, 19189703, 19189704, 19189705, 19189706, 12530236,
22792724, 22792725, 22792726, 22792727, 22792728, 22792729, 22792730, 22792731,
22792732, 1999630, 1999631, 1999632, 1999633, 1999634, 22824788, 22824789,
22824790, 22824792, 11384063, 11384064, 11384065, 11384066, 11384067, 11384068,
11384069, 11384070, 11384071, 11384090, 11384091, 11384092, 11384093, 1999832,
11384094, 11384095, 11384096, 11384097, 11384116, 11384117, 11384118, 11384119,
11384120, 11384121, 11384122, 11384123, 11384124, 11384143, 11384144, 11383036,
11383037, 31320435, 31320436, 11571625, 11571626, 11571627, 11571628, 11571629,
11571630, 11571631, 11571632, 12459585, 12459586, 12459587, 12459588, 12459589,
12459590, 12459591, 11389016, 11389017, 12459610, 12459611, 12459612, 12459613,
12459614, 12459615, 12459616, 12459617, 12459618, 22890979, 12459637, 12459638,
12459639, 12459640, 12459641, 22804838, 22804839, 22804840, 11383267, 11383268,
11571181, 11571182, 11571183, 11571184, 11571185, 11571186, 11571187, 15997814,
15997815, 15997816, 15997819, 15997820, 15997821, 15997822, 22814798, 22890272,
22890273, 22818231, 22818232, 22818233, 22818234, 26998672, 26998673, 26998674,
11373697, 11373698, 11373699, 11373700, 11373701, 11373702, 11373703, 11373704,
11373705, 11378139, 11378140, 11378141, 11378142, 11378143, 11378144, 11378145,
11378146, 11378147, 11379439, 11379440, 11379441, 11379442, 11379443, 11379444,
11379445, 11379446, 11379447, 11379466, 11379467, 11379468, 11379469, 11379470,
11379471, 11379472, 11379473, 11379474, 11379493, 11379494, 11379495, 11379496,
11379497, 11379498, 14858878, 14858879, 14858880, 11571567, 11571568, 11571569,
11571570, 11571571, 11571572, 11571573, 11571574, 11571575, 11383272, 11392212,
11392213, 11392214, 12459905, 12459906, 12459907, 11382375, 11382376, 11382377,
11382378, 11382379, 11382380, 11374170, 11374171, 11374172, 11374173, 11374174,
11374175, 11374176, 11374177, 11374178, 11376960, 11376961, 11376962, 11376963,
11376964, 11376965, 11376966, 11376967, 11376968, 11381445, 11381446, 11381447,
11381448, 11381449, 11381450, 11381451, 11381452, 11381453, 11381472, 11381473,
11381474, 11381475, 11381476, 11381477, 11381478, 11381479, 11381480, 22834346,
22834347, 22834348, 22834349, 22834350, 22834351, 11381499, 11381500, 11381501,
11377723, 11377724, 11377725, 11377726, 11377727, 11377728, 11377729, 11377730,
11377731, 11378173, 11378174, 11378175, 11378176, 11378177, 11378178, 11378179,
11378180, 11378181, 11378273, 11378274, 11378275, 11378276, 11378277, 11378278,
11378279, 11378280, 11378281, 11378300, 11378301, 11378302, 11379000, 11379001,
11380891, 11380925, 11380926, 11383375, 11374039, 11374040, 11374041, 11374042,
11374043, 11374044, 11374045, 11374046, 11374065, 11374066, 11374067, 11374068,
11374069, 11374070, 11374071, 11374072, 11374073, 11374092, 11374093, 11374094,
11374095, 11374096, 11374097, 11374098, 11374099, 11374100, 11374101, 11374102,
11374103, 11374104, 11374105, 11374106, 11374107, 11374108, 23569247, 23569248,
23569251, 31438280, 31438282, 31438283, 31438284, 22882337, 22882338, 22882339,
22882340, 5820650, 19147037, 19147038, 19147039, 19147040, 30263758, 22829348,
22829349, 27023124, 27023125, 22829343, 22829344, 22829345, 22829346, 22829347,
22882341, 22882342, 22882343, 22882344, 5820649, 11389031, 11389032, 11389026,
12459465, 12459466, 12459513, 22827721, 22828280, 22828281, 22828282, 22828283,
22828287, 27000124, 27000125, 27003870, 26178070, 29907632, 30798397, 30799815,
30799816, 32271297, 32271298, 32271299, 32271300, 27020047, 27020048, 27020049,
27020050, 27020051, 27020052, 27020053, 27020054, 27020055, 32262729, 29259983,
12522322, 12522323, 12522324, 12522325, 12528441, 14269437, 29784376, 11377214,
11377215, 11377216, 11377217, 11377218, 11377219, 11377220, 11377221, 11377222,
11377232, 11377233, 11377234, 11377235, 11377236, 11377237, 11377238, 11377239,
11377240, 11377250, 11377251, 11377252, 11377253, 11377254, 11377255, 11377256,
11377257, 11377258, 24222002, 24222003, 24222004, 24222005, 11377268, 11377269,
11377270, 22825269, 22825270, 11571745, 11571746, 11571747, 11571748, 11571749,
11571750, 11571751, 11571752, 11571753, 11571996, 11571997, 11571998, 11571999,
11572000, 11572001, 11572002, 11572003, 11572004, 11572015, 11572016, 11572017,
11572018, 11572019, 11572020, 11572021, 11572022, 11572014, 12459993, 12459994,
12459995, 12459996, 12459997, 12459998, 12459999, 11572032, 11572033, 12460009,
12460010, 12460011, 12460012, 12460013, 12460014, 12460015, 12460016, 12460017,
27000506, 27000507, 27000508, 30107776, 27356701, 27356702, 27842983, 27842984,
27842985, 27356711, 27356712, 27356713, 27356714, 27356715, 27356716, 11388566,
11388567, 11388568, 11388569, 11388570, 11388571, 11388572, 11388573, 11388574,
11388584, 11388585, 11388586, 11388587, 11388588, 11388589, 11388590, 11388591,
11388592, 11388602, 11388603, 11388604, 11388605, 11388606, 11388607, 11388608,
11388609, 11388610, 11571541, 11571542, 11571543, 11571544, 11571545, 11571546,
12460138, 11383261, 11383262, 11395460, 11395461, 11395462, 11395479, 11395480,
11395481, 11395482, 11395483, 11395484, 11395527, 11395528, 11395529, 11395531,
11395532, 11395533, 11395545, 11395546, 11395547, 12459851, 12459852, 12459853,
12459854, 12459855, 12459856, 12459857, 12459858, 12459859, 12459869, 12459870,
12459871, 12459872, 12459873, 12459874, 12459875, 12459876, 12459877, 11381006,
11381007, 11381008, 11381009, 11381010, 11381011, 11380889, 11380924, 11381021,
11381022, 11381023, 11381024, 11381025, 11381026, 11381027, 11381028, 11381029,
11381039, 11381040, 11381041, 11381042, 11381043, 11381044, 11381045, 11381046,
11381047, 11381057, 11381058, 11381059, 11381060, 11381061, 11381062, 11381063,
11381064, 11381065, 11381075, 11381076, 11381077, 11381078, 11381079, 11381080,
11381081, 11381082, 11381083, 11381093, 11381094, 11381095, 11381096, 11381097,
11381098, 11381099, 11381100, 11381101, 32285010, 32285034, 32285035, 32285036,
32285041, 32285048, 27008003, 27008005, 27008007, 25784828, 25784829, 25784830,
25805409, 25805410, 25805411, 31764743, 13170953, 13170954, 27931170, 27931171,
27931172, 27931173, 19177083, 13170964, 13170965, 13170966, 13170967, 13170968,
13170969, 13170970, 13170971, 26385954, 22818608, 27192427, 26390377, 26390378,
32328234, 32258971, 32258972, 32258973, 32259030, 32259031, 32259032, 32259701,
11377360, 11377361, 11377362, 11377363, 11377364, 11377365, 11377366, 11377367,
11377368, 11377379, 11377380, 11377381, 11377382, 11377383, 11377384, 11377385,
11377386, 11377387, 11377397, 11377398, 11377399, 11377400, 11377401, 11377402,
11377403, 11377404, 11377405, 11379295, 11379296, 11378158, 11378159, 11378160,
11378161, 11378162, 11378163, 11378164, 11379320, 11379321, 11379322, 11379323,
11379324, 11379325, 11379326, 11379327, 11379328, 11377949, 11377950, 11377951,
11377952, 11377953, 11377954, 11377955, 11377956, 11377957, 11380860, 11380862,
11377967, 11377968, 11377969, 11377970, 11377971, 11377972, 11377973, 11380872,
11380873, 11380874, 11380875, 11380876, 11380877, 11380878, 11380879, 11380880,
11391858, 11391859, 11391860, 11391861, 11391862, 11391863, 11391864, 11391865,
11391866, 11391893, 11391894, 11391895, 11391876, 11391877, 11391878, 11391882,
11391883, 11391884, 32259700, 30105895, 30110279, 32272642, 32276042, 32323321,
24775512, 24775515, 32307576, 32307577, 32301009, 5820860, 24732406, 32257132,
32257743, 32258604, 32259546, 32263327, 31520989, 31521918, 31521919, 31527832,
11380392, 11380393, 11380394, 11380395, 11380396, 11380397, 11380398, 11380399,
11380400, 11380410, 11380411, 11380412, 11380413, 11380414, 11380415, 11380416,
11380417, 11380418, 11380428, 11380429, 11380430, 11380431, 11380432, 11380433,
11380434, 11380435, 11380436, 11380446, 11380447, 11380448, 11380449, 11380450,
11380451, 11380452, 11380453, 11380454, 11380464, 11380465, 11380466, 11380467,
11380468, 11380469, 11380470, 11380471, 11382105, 11382106, 11382107, 11382108,
11382109, 11382110, 11382111, 11382112, 11382113, 11380914, 11380915, 11380916,
11380917, 11380918, 11380919, 11382094, 11382095, 11382096, 11374917, 11374918,
11374937, 11374938, 11374939, 11374940, 11374941, 11374942, 11374919, 11374920,
11374921, 11374922, 11374923, 11374924, 11374970, 11374971, 11374972, 11374952,
11374953, 11374954, 11374973, 11374974, 11374975, 11374976, 11374977, 11374978,
11374932, 11374933, 11374934, 11374935, 11374936, 11374955, 11374956, 11374957,
11374958, 24920951, 11374985, 11374986, 11374987, 11374988, 11374989, 11375829,
11375830, 11374109, 11374110, 11374111, 11374112, 11374113, 11374114, 11374115,
11374116, 11383295, 27931091, 27931097, 27931087, 27931088, 27931089, 23569249,
32288258, 31330094, 27008641, 27008642, 27008643, 27008645, 22828343, 22828344,
22828345, 22828346, 31438285, 19147033, 19147034, 19147035, 19147036, 27382582,
29295051, 29295052, 29295053, 13445470, 5820651, 5820652, 27023126, 27023134,
22828347, 22828366, 22828367, 22828368, 25771072, 22882345, 22882346, 22882347,
22882348, 27008600, 32271291, 32271292, 5830767, 11571606, 11389034, 11389035,
11389036, 11389045, 11389046, 23204902, 11389065, 11389066, 5820653, 28461502,
28461504, 26178069, 27003871, 27003872, 27003873, 27003874, 28461363, 28461365,
19174373, 19174374, 19174375, 19174376, 31391422, 25812052, 32271301, 27020044,
27020045, 27020046, 11377205, 11377206, 11377207, 11377208, 11377209, 11377210,
11377211, 11377212, 11377213, 11377223, 11377224, 11377225, 11377226, 11377227,
11377228, 11377229, 11377230, 11377231, 11377241, 11377242, 11377243, 11377244,
11377245, 11377246, 11377247, 11377248, 11377249, 11377259, 11377260, 11377261,
11377262, 11377263, 11377264, 11377265, 11377266, 11377267, 24222006, 24222007,
11571738, 11571739, 11571740, 11571741, 11571742, 11571743, 11571744, 11571989,
11571990, 11571991, 11571992, 11571993, 11571994, 11571995, 11571754, 11571755,
11572005, 11572006, 11572007, 11572008, 11572009, 11572010, 11572011, 11572012,
11572013, 11572023, 11572024, 11572025, 11572026, 11572027, 11572028, 11572029,
11572030, 11572031, 12460000, 12460001, 12460002, 12460003, 12460004, 12460005,
12460006, 12460007, 12460008, 12460018, 12460019, 12460020, 12460021, 12460022,
12460023, 12528886, 27000501, 27000502, 27000503, 27000504, 27000505, 27356703,
27356704, 27356705, 27356706, 27356707, 27356708, 27356709, 27356710, 27842986,
29213573, 29213574, 29213575, 29213576, 29213577, 29213578, 29213579, 29213580,
11388561, 11388562, 11388563, 11388564, 11388565, 11388575, 11388576, 11388577,
11388578, 11388579, 11388580, 11388581, 11388582, 11388583, 11388593, 11388594,
11388595, 11388596, 11388597, 11388598, 11388599, 11388600, 11388601, 11388611,
11571533, 11571534, 11571535, 11571536, 11571537, 11571538, 11571539, 11571540,
11389012, 11395449, 11395450, 11395451, 11395455, 11395456, 11395457, 11395458,
11395459, 11395485, 11395486, 11395487, 11395488, 11395489, 11395490, 11395524,
11395525, 11395526, 12459842, 12459843, 12459844, 12459845, 12459846, 12459847,
12459848, 12459849, 12459850, 12459860, 12459861, 12459862, 12459863, 12459864,
12459865, 12459866, 12459867, 12459868, 12459878, 12459879, 12459880, 12459881,
12459882, 12459883, 12459884, 12459885, 12459886, 11381012, 11381013, 11381014,
11381015, 11381016, 11381017, 11381018, 11381019, 11381020, 11381030, 11381031,
11381032, 11381033, 11381034, 11381035, 11381036, 11381037, 11381038, 11381048,
11381049, 11381050, 11381051, 11381052, 11381053, 11381054, 11381055, 11381056,
11381066, 11381067, 11381068, 11381069, 11381070, 11381071, 11381072, 11381073,
11381074, 11381084, 11381085, 11381086, 11381087, 11381088, 11381089, 11381090,
11381091, 11381092, 11381102, 27007989, 27007991, 27007993, 27007995, 27007997,
27007999, 27008001, 21074214, 21074216, 21074217, 32285053, 21074218, 32262593,
32262594, 32262595, 32262596, 13170955, 13170956, 13170957, 13170958, 13170959,
13170960, 13170961, 13170962, 13170963, 19177084, 19177085, 19177086, 19177087,
19177088, 19177089, 19177090, 19177091, 19177093, 22818609, 32314246, 32334452,
11377346, 11377347, 11377348, 11377349, 11377350, 11377351, 11377352, 11377353,
11377354, 11377355, 11377356, 11377357, 11377358, 11377359, 11377369, 11377370,
11377371, 11377372, 11377374, 11377375, 11377376, 11377377, 11377378, 11377388,
11377389, 11377390, 11377391, 11377392, 11377393, 11377394, 11377395, 11377396,
11377406, 11377407, 11377408, 11377409, 11377410, 11378154, 11378155, 11378156,
11378157, 11379297, 11379298, 11379299, 11379300, 11379301, 11379302, 11379303,
11379304, 11379319, 11377945, 11377946, 11377947, 11379329, 11379330, 11379331,
11379332, 11377958, 11377959, 11377960, 11377961, 11377962, 11377963, 11377964,
11377965, 11377966, 11380863, 11380864, 11380865, 11380866, 11380867, 11380868,
11380869, 11380870, 11380871, 11380881, 11380882, 11380883, 11380884, 11391855,
11391856, 11391857, 11383484, 11383537, 11391867, 11391868, 11391870, 11391871,
11391872, 11391873, 11391874, 11391875, 11391869, 11391898, 11391899, 11570968,
11570969, 11570970, 11570971, 11570972, 11570973, 11570974, 11570975, 11570976,
11570977, 21953161, 11377884, 22818734, 22818735, 32333935, 32334453, 32323322,
5820859, 32307575, 32323323, 19145466, 22787730, 22787731, 22787732, 22818733,
31527833, 31527834, 19145463, 19145464, 19145465, 11380390, 11380391, 11380401,
11380402, 11380403, 11380404, 11380405, 11380406, 11380407, 11380408, 11380409,
11380419, 11380420, 11380421, 11380422, 11380423, 11380424, 11380425, 11380426,
11380427, 11380437, 11380438, 11380439, 11380440, 11380441, 11380442, 11380443,
11380444, 11380445, 11380455, 11380456, 11380457, 11380458, 11380459, 11380460,
11380461, 11380462, 11380463, 11380907, 11380908, 11380909, 11380910, 11382102,
11382103, 11382104, 11380911, 11380912, 11380913, 11382114, 11382115, 11382116,
11382117, 11382118, 11382119, 11380920, 11382097, 11382098, 11382099, 11382100,
11382101, 11382120, 11382121, 11382122, 11382123, 11374943, 11374944, 11374945,
11374964, 11374965, 11374966, 11374967, 11374968, 11374969, 11374925, 11374926,
11374927, 11374946, 11374947, 11374948, 11374949, 11374950, 11374951, 11379015,
11379016, 11374928, 11374929, 11374930, 11374931, 11374979, 11374980, 11374981,
11379014, 11374959, 11374960, 11374961, 11374962, 11374963, 11374982, 11374983,
11374984, 11754845, 11754846, 11754847, 24049197, 28460660, 27969607, 27969647,
28461577, 23718136, 26962421, 30295061, 30295062, 26384354, 29904292, 32304473,
29697239, 29697240, 21072388, 21072389, 21072392, 21072393, 21072394, 21072397,
21072398, 21072399, 24168880, 26382189, 26382190, 26382191, 26382192, 26382193,
26382194, 26382195, 26382196, 26382197, 27695524, 32067763, 32309048, 32344631,
29699356, 32232803, 32238082, 13167790, 19180137, 19180138, 32339048, 26993161,
26993162, 2004328, 2004329, 2004330, 2004331, 19181196, 19181197, 19181198,
19181199, 19181200, 19181201, 26993038, 26993039, 26993040, 26382201, 26382202,
26382203, 26382204, 26382205, 26382206, 26382207, 26382198, 19674380, 26162607,
26162707, 26162708, 26162709, 26162710, 26162711, 26162712, 26162730, 26162731,
29836338, 29699424, 29699425, 29803774, 29600753, 32227449, 24990500, 2004324,
19175400, 19175401, 19175402, 19175403, 19175404, 19175405, 19175406, 19175407,
2004327, 2004326, 5823459, 5823460, 5823461, 29212308, 26382187, 26382188,
24775427, 32309008, 22805669, 22805671, 22805672, 22805673, 22805674, 22804354,
22804355, 22804356, 26993037, 29893101, 29893102, 29893103, 29893104, 26488214,
5823458, 5827666, 5827667, 5827668, 32067742, 32067743, 32067744, 32067761,
32067762, 32067764, 32067765, 31467348, 32239292, 32239612, 32239613, 32242694,
21946808, 23848772, 32244716, 23421657, 19180139, 19180141, 19180142, 26993157,
26993158, 26993159, 26993160, 25801492, 29200536, 22787444, 26998733, 26998734,
22782668, 22782669, 22782670, 22781026, 22781027, 22781028, 22781029, 29893100,
27009149, 27009150, 27009151, 27009159, 27009160, 27009669, 27009670, 27976332,
26200422, 26200423, 26200424, 26200425, 24168881, 24168882, 27843009, 27843010,
27345744, 26992802, 26992803, 26993215, 26993216, 19180469, 19180464, 19180462,
26162713, 26162714, 26162724, 23364776, 22782672, 22782673, 22782674, 22782675,
22782676, 22804350, 22804351, 22804352, 22804353, 5827669, 31467158, 26162582,
26162583, 26162584, 26382208, 26382209, 26382210, 26382211, 26382212, 26382213,
31399033, 31399034, 28586656, 32230451, 32299539, 32299540, 32299541, 32299542,
32299543, 32304465, 32295345, 32295346, 28588377, 22787052, 22787053, 22787054,
22787055, 22787056, 22787143, 22787144, 22787145, 30216171, 30216172, 30216173,
30216174, 32700136, 2004322, 2004323, 2004325, 32234642, 19180463, 26162715,
26162716, 26162717, 26162718, 26162719, 26162720, 26162721, 26162722, 29870185,
31469850, 26993047, 26993048, 27009144, 27009145, 27009146, 27009147, 27009148,
19175408, 19175409, 32245992, 24733113, 28464016, 28585926, 25083881, 25113040,
25113041, 32317663, 32339037, 25397689, 25397690, 32339052, 32339053, 32304464,
25397692, 28588383, 30067634, 23365771, 30803281, 30130503, 30130504, 32233609,
32231198, 32231199, 32231201, 31435861, 32234641, 25811129, 25811130, 25811131,
25811132, 25811133, 21072382, 21072383, 21072384, 21072387, 27843011, 30222258,
30222259, 30222262, 30222263, 30222265, 30222266, 30222267, 24775426, 26993217,
26993218, 26993219, 26993220, 19180465, 19180466, 19180467, 19180468, 26162723,
27976328, 18041028, 30108831, 30105727, 30110292, 23443094, 23480680, 23434431,
23451412, 23468750, 23481526, 15271953, 15271954, 15271955, 15271956, 23455833,
23459547, 23459708, 23460031, 23479099, 23471265, 23480391, 18006853, 18030673,
18060407, 18085909, 18090262, 18091714, 23435446, 23443101, 23448224, 23460809,
23465478, 23476736, 23477518, 23429127, 23481389, 23428730, 23452894, 23453372,
23454135, 23463028, 23466376, 23467755, 23471121, 23475025, 23476430, 23477664,
23479303, 23428450, 23436323, 21941996, 23451099, 23458430, 23466204, 23480163,
23429575, 23430398, 23430748, 23432390, 23440153, 23441711, 23443892, 23446973,
23447699, 23449101, 23449323, 23449579, 23450658, 23451262, 23451287, 23451601,
23454469, 23456163, 23456910, 23456975, 23457055, 23457604, 23458043, 23458420,
23458550, 23459024, 23459091, 23459790, 23459917, 23460389, 23460799, 23461654,
23462556, 23462606, 23462781, 23462921, 23463377, 23463703, 23463891, 23464339,
23464481, 23466100, 23466122, 23466422, 23467142, 23467279, 23467352, 23467372,
23467609, 23467734, 23468142, 23468226, 23468495, 23468540, 23468552, 23468826,
23468909, 23469215, 23469413, 23469446, 23469821, 23469843, 23470144, 23470488,
23471035, 23471497, 23471558, 23471598, 23471797, 23472901, 23472990, 23473290,
23473342, 23473859, 23473901, 23473941, 23473949, 23474241, 23474288, 23474534,
23474570, 23474807, 23474888, 23475332, 23475776, 23475934, 23475960, 23476659,
23476828, 23476849, 23477006, 23477303, 23477373, 23477391, 23477581, 23478073,
23478288, 23478397, 23478610, 23478623, 23478695, 23478697, 23479102, 23479192,
23479332, 23479522, 23479669, 23479678, 23479989, 23480569, 23480576, 23480838,
23481340, 23481522, 23481570, 23481662, 23482078, 23482230, 23482280, 23482350,
23482376, 23482411, 23482496, 23482502, 23482596, 23482689, 23482899, 23483133,
23483233, 23483576, 24146230, 16097796, 16121176, 16121177, 16121183, 16121184,
16121185, 16121186, 16121187, 16121193, 16121194, 16121195, 16121196, 16121202,
16121203, 16121204, 16121229, 16121230, 16121231, 19061237, 19061239, 23448718,
23470518, 29665038, 29665039, 15271950, 15271951, 15271952, 18070900, 23423822,
23425442, 23426286, 23427324, 23433886, 23435711, 23436472, 23439390, 23440106,
23440389, 23441717, 23441772, 23443264, 23445415, 23447854, 23449250, 23461376,
23468529, 23474264, 23475708, 23480874, 23482159, 24124840, 24124852, 24125050,
24125108, 24125120, 24126288, 24126445, 24126855, 24127230, 24127512, 24129587,
24131464, 24135143, 24135722, 24136635, 20828222, 23352981, 23360070, 23360071,
22599088, 22612581, 29641122, 29641123, 23481061, 23433666, 23453126, 23458558,
23452533, 18027641, 23445425, 26466024, 26466025, 25724935, 25724936, 25724937,
25812013, 25812014, 25812015, 25812010, 25812011, 25812012, 25812032, 25812745,
25812335, 25812336, 25812337, 25812024, 25812025, 25812026, 25812030, 25812031,
25812027, 25812028, 25812029, 25812020, 25724928, 25724929, 25724889, 25724890,
25724891, 25724925, 25724926, 25724927, 32811135, 32811136, 18083017, 18051042,
17994783, 18022965, 18029152, 26464651, 26465639, 26465640, 26465568, 26465569,
26465570, 26465087, 26465088, 26465089, 26466142, 26466463, 26466464, 26466465,
26691460, 26691461, 26691462, 26691463, 26691657, 11571435, 11571436, 11571437,
11571438, 11571439, 11571440, 11571441, 11571442, 11571443, 11571521, 11571522,
26465718, 26465719, 26465720, 18089038, 26465865, 26465866, 26465867, 25724976,
25812781, 25812782, 25813197, 25813198, 25813199, 25813700, 25813701, 25813702,
25813724, 25813725, 25813726, 25813727, 25813728, 25813729, 25813674, 25813675,
25724918, 25812776, 25812067, 25812068, 25812069, 25812056, 25812057, 25812812,
25812813, 25812814, 25812048, 25812049, 25812050, 26692382, 26465613, 26465614,
26465615, 26465616, 26465516, 26465923, 26465924, 26465925, 25724930, 25725006,
25725007, 25725008, 25725012, 25725013, 25725014, 32811133, 32811134, 26464648,
26464649, 26464650, 18051911, 18071983, 18107227, 26464625, 26464626, 26464627,
26465641, 26466140, 26466141, 26465948, 26465949, 26465950, 26466049, 26466050,
26466051, 11571434, 26691658, 26691659, 26691660, 26691661, 26691662, 26691786,
26691787, 26691788, 11571444, 11571605, 12459505, 12459506, 12459507, 12459508,
12459509, 12459510, 12459512, 11571523, 11571524, 11571525, 18000639, 25812780,
25724977, 25724978, 25812953, 25812954, 25812955, 25813640, 25813641, 25813642,
25813673, 25812774, 25812775, 25724919, 25724920, 25724921, 25725026, 25725027,
25725028, 25812055, 25812070, 25812071, 25812072, 25812051, 25812053, 25812054,
25812045, 25812046, 25812047, 26465192, 26465194, 26465195, 26465513, 26465514,
26465515, 23464743, 23460518, 23474842, 23427248, 23433511, 23458157, 23443617,
23459535, 23456505, 23442494, 23440681, 23441938, 23443580, 23445571, 23446987,
23445232, 23445822, 23445952, 23439376, 23473561, 23477611, 23442195, 29665469,
15271957, 15271958, 23476057, 23475589, 23480967, 23447257, 23480082, 23445579,
23446658, 23459196, 23468968, 23453512, 23468577, 23469763, 23442250, 23466358,
23436280, 23432379, 23437549, 23440226, 23429454, 23430471, 23439248, 23423437,
23425671, 23455513, 23454840, 23455156, 23457336, 23457898, 23458537, 23455600,
23456261, 23462690, 23473447, 23477363, 23455958, 23470281, 23438299, 23474296,
23475738, 23479142, 23448425, 23449367, 23449936, 23450561, 23451736, 23454094,
23450060, 23451225, 23454689, 23473014, 23481517, 23470669, 23473594, 23475607,
23476829, 23479687, 23483464, 23471090, 29642304, 29642305, 29642306, 29642307,
29642308, 26961653, 26961654, 19180140, 29704687, 30067632, 30901816, 26961655,
26961656, 25085211, 28588378, 30900936, 28588381, 29683944, 29684349, 28656207,
29704512, 21946809, 22716759, 24839232, 27872706, 27937939, 28584856, 28585021,
28586129, 28586572, 28587059, 26961652, 25155261, 21936885, 24905733, 28427885,
25780284, 31482547, 26904287, 27159791, 27320849, 27097079, 27814287, 27809805,
27825288, 28449745, 29732125, 31616526, 27772530, 28427884, 30249004, 31553922,
24979634, 25784813, 26891476, 26891477, 26891478, 26891479, 26930131, 27065296,
27065299, 27065668, 27070189, 27074828, 27074829, 27074830, 27074831, 27074832,
27074833, 27081201, 27116789, 27118668, 27171858, 27172792, 27177413, 27177424,
27223177, 27223183, 27241917, 27263780, 27263781, 27263783, 27263784, 27310520,
27341583, 27341584, 27344624, 27697213, 27721093, 27724032, 27736590, 27748827,
27783915, 27783916, 27783918, 27783919, 27783920, 27783921, 27783922, 27798051,
27798053, 27798054, 27798677, 27800101, 27800104, 27800105, 27810513, 27811534,
27812333, 27815987, 27815988, 27815989, 27815993, 27815994, 27815995, 27815997,
27817187, 27820234, 27820236, 27820970, 27820973, 28671404, 28686310, 28692833,
28692834, 28692835, 28692836, 28692839, 28713892, 29200434, 29200435, 29252642,
29254082, 29729708, 29901663, 31349055, 31356787, 31356827, 31485469, 31493117,
31493118, 31646758, 31656425, 31657097, 31657098, 31657210, 31657224, 31657225,
31657226, 31657253, 31658168, 31660703, 31661505, 31661506, 31661507, 31661508,
31663692, 31664816, 31664820, 31665029, 31791756, 31794337, 31795829, 31795830,
31795831, 31795832, 31795833, 31795834, 31795835, 31795836, 31795837, 31795898,
31796112, 31796277, 31796472, 31797762, 31797765, 31798196, 31938037, 31952970,
27812391, 28696281, 28708788, 28708789, 28708790, 28708791, 28708792, 28708793,
28708794, 28708795, 28708796, 28708797, 28708798, 28708799, 31656102, 25796400,
27690278, 27690279, 27709671, 27709672, 27724272, 27740634, 27758772, 29936749,
29936750, 31485470, 31643610, 31643611, 31643612, 31665884, 31798216, 27064099,
27820465, 25090640, 27715554, 27729613, 27734948, 27748119, 27752957, 27768991,
31657748, 31734954, 31791848, 31921547, 31932095, 29822483, 29875289, 32358652,
32386475, 32387016, 32387022, 32388548, 32388549, 32394988, 32395951, 32395961,
32396710, 32397002, 32209822, 32209823, 32302397, 32302431, 32396539, 32396718,
32397787, 24878980, 24878981, 26907486, 27132649, 29901740, 27056270, 27056271,
27056272, 27056273, 27056274, 27056275, 27056276, 27056277, 27056278, 31487963,
31487964, 31487965, 31487966, 31795821, 28707094, 28707095, 28707096, 28707097,
31666046, 31666047, 31666048, 31666049, 31666050, 31795819, 27056269, 31798218,
24953361, 27134666, 31652477, 31657197, 31657198, 31657199, 31657200, 31657201,
31660875, 31657203, 31486561, 31795803, 31795804, 31795805, 31795806, 31795807,
31795808, 31795809, 31795810, 31795811, 31795812, 31795813, 31795815, 31657177,
31657178, 31657179, 31657180, 31657181, 31657182, 31664686, 31664712, 31664713,
31664714, 31664715, 31664719, 31464939, 24943258, 24943259, 24943260, 24943261,
25124141, 25124142, 25124143, 25124144, 25124145, 25124146, 25124147, 25124148,
25124149, 25124150, 25124151, 25124152, 25124153, 25124154, 25124155, 25124156,
25124157, 25124158, 25124159, 25124160, 25124161, 25799943, 25799944, 29212305,
31456433, 31510542, 31546825, 31546826, 31553651, 31553687, 31662660, 31663545,
24862267, 24862268, 24876335, 24901211, 24917423, 24917495, 24929528, 24929529,
24936973, 24938740, 24945667, 24945668, 24977386, 24991693, 25001806, 25796449,
25804969, 25804970, 25806022, 25987837, 25987838, 25987841, 26430409, 26930128,
26930129, 26930130, 26956771, 27054922, 27115056, 27156658, 27184676, 27221898,
27246477, 27367878, 27367879, 27367880, 27369197, 27480470, 27697688, 27702856,
27702857, 27708602, 27709472, 27709473, 27719766, 27719767, 27719768, 27719769,
27719770, 27719771, 27719772, 27720058, 27722139, 27722164, 27730396, 27730397,
27734174, 27743028, 27743140, 27743163, 27760596, 27762555, 27762556, 27764008,
27768432, 27768919, 27779869, 27800087, 27810514, 27810515, 27814259, 27817584,
27818375, 27820277, 27820633, 27820634, 28678490, 28685888, 28691116, 28694850,
28708973, 28708975, 28708977, 28709146, 28714160, 29206663, 29211597, 29255675,
29255786, 29680730, 29741990, 29868619, 29892924, 29949096, 30132918, 31340323,
31464157, 31464158, 31464845, 31464970, 31484068, 31487076, 31487726, 31487750,
31487751, 31487752, 31510790, 31643745, 31643822, 31643829, 31643830, 31643880,
31648510, 31651085, 31656347, 31656429, 31656473, 31656938, 31656944, 31656986,
31657058, 31657086, 31657138, 31657139, 31657191, 31657192, 31657193, 31657194,
31657195, 31657196, 31657872, 31658167, 31658169, 31658170, 31658171, 31660858,
31660912, 31660955, 31661546, 31661582, 31664495, 31664529, 31664710, 31664743,
31666707, 31666718, 31791956, 31791957, 31791958, 31792323, 31792324, 31794412,
31795698, 31796175, 31796421, 31797279, 31797280, 31797281, 31797354, 31797355,
31797356, 31797357, 31797358, 31797359, 31797627, 31797755, 31797757, 31797766,
31798220, 31798229, 31871181, 31936856, 31953278, 31953279, 31953280, 31953281,
32395960, 32429465, 27741780, 27753602, 28692793, 29678303, 29679670, 29679671,
31486547, 32441750, 32442828, 32443212, 32445496, 32445497, 32445498, 32445499,
32445500, 32445501, 32445502, 32445503, 32445504, 32445505, 32445506, 32445507,
32446790, 32452876, 32448513, 32448863, 32450503, 32450505, 32452852, 32452853,
32452854, 32452855, 32452856, 32452857, 32452858, 32452870, 32452871, 32452872,
31795586, 15606067, 15606068, 15606069, 15606070, 15606071, 15606072, 15606073,
15606074, 15606075, 15606076, 15606077, 15606078, 32357613, 27046685, 32154996,
24913192, 27075342, 27075343, 27075344, 27075345, 27799676, 27824978, 27824979,
27154362, 27318375, 27799674, 24879994, 31794473, 31351850, 31351854, 27075346,
15591772, 15591769, 15591770, 15591773, 15591795, 15591782, 15591783, 15591784,
15591785, 15591786, 15591787, 15591796, 15591780, 15591775, 15591776, 15591767,
15591768, 15591771, 15591777, 15591778, 15591790, 15591791, 15591792, 15591793,
15591794, 15591779, 15591774, 15591781, 15591788, 15591789, 28694849, 31356826,
26560429, 27735701, 27742965, 31485471, 31794339, 31794338, 31797571, 31794381,
31871447, 24992935, 31485468, 24868005, 24868007, 27707245, 27707246, 27733839,
31352492, 31798219, 31795841, 33093649, 24963441, 24992235, 24992236, 25795328,
27711682, 27226327, 29869537, 29869538, 29869539, 31463994, 31641661, 31796969,
31795072, 31679267, 31794174, 25798469, 27168023, 31952756, 31952757, 31952755,
32388539, 32450504, 29900859, 29155016, 29155017, 29155018, 29155019, 12456963,
12456964, 12456965, 27072920, 27247618, 27079449, 27798665, 29741931, 24880090,
27343251, 27263178, 27341724, 31801932, 26799151, 27247649, 27174070, 27174071,
25806526, 25806527, 25003067, 25800604, 27801051, 27801053, 27801054, 27174066,
27174067, 27174068, 27247427, 27174069, 24880091, 24880092, 26747136, 26792607,
27063031, 27063032, 27063425, 27063426, 24933955, 24881131, 24881132, 26104822,
26922738, 27743313, 27743314, 27798101, 27798102, 31664491, 31798197, 31925573,
32154723, 31373925, 31795842, 31796420, 32395949, 32395950, 24876334, 27811535,
31485472, 27341566, 31795846, 28386446, 32156020, 26898189, 27044669, 27702962,
31794101, 31795843, 31795844, 31795845, 24838356, 26877339, 27765833, 29741989,
27180391, 27180392, 27054968, 27260076, 27311455, 25794428, 27148239, 31335766,
31795088, 32390525, 31796520, 32395952, 31664765, 31651980, 31938917, 26899417,
27168021, 27168022, 27168024, 27168025, 27168026, 27168027, 27168028, 27168029,
27695525, 31643960, 31643961, 25183216, 27114157, 27114158, 27114159, 27168019,
27168020, 27470855, 27470856, 27471041, 27471576, 27471650, 27475908, 27475911,
11377783, 11377784, 11377785, 11377786, 11377787, 11377788, 11377789, 11377790,
11377791, 11377774, 11377775, 11377776, 11377777, 11377778, 11377779, 11377780,
11377781, 11377782, 11377792, 11377793, 11377794, 11377795, 11377796, 11377770,
11377771, 11377772, 11377773, 25792542, 27743186, 24967281, 27475436]

@solr = SolrCore::SiteSearch.new
Benchmark.measure { @solr.index_type(DataObject, dids) }

good = @solr.paginate("resource_type:Image AND keyword:Megastigmus transvaalensis")["response"]["docs"].last
bad = @solr.paginate("resource_unique_key:DataObject_31374001 AND keyword_type:object_title")["response"]["docs"].last

dids.in_groups_of(1000, false) { |group| @solr.delete("resource_type:DataObject AND resource_id:(#{group.join(" OR ")})") }
@solr.connection.add(@objects.to_a)


### Re-write of taxa to site_search objects:
# 7221 is 84 taxa, all of them quite rich:
# 7 is 8 taxa, of varying richness:
ids = CollectionItem.where(collection_id: 7, collected_item_type: "TaxonConcept").pluck :collected_item_id
@solr = SolrCore::SiteSearch.new
Benchmark.measure { 10.times { @solr.index_type(TaxonConcept, ids) } }
# Old code => 187.820000   7.480000 195.300000 (257.626277)
# New code =>  50.700000   0.540000  51.240000 ( 76.566389)

# ... if there are any scientific names that are also in the common names (any
# language), they are removed from the common names. This is done inefficiently.

sol_hash = {
  resource_type:             "TaxonConcept",
  resource_id:               id,
  resource_unique_key:       "TaxonConcept_#{id}",
  ancestor_taxon_concept_id: taxon[:ancestor_taxon_concept_id],
  richness_score:            taxon[:richness_score]
  keyword_type: TAXON_NAME_FIELDS[field][:keyword],
  keyword: object[field].to_a,
  language: 'sci',
  resource_weight: TAXON_NAME_FIELDS[field][:weight]
  keyword_type: TAXON_NAME_FIELDS[field][:keyword],
  keyword: names.to_a,
  language: iso,
  resource_weight: TAXON_NAME_FIELDS[field][:weight]
}

### Harvesting Side

IMAGE_SIZE_LARGE_WIDTH = 1280
IMAGE_SIZE_LARGE_HEIGHT = 1040

# input: image, with a size of 1440x1230

source_image = file_on_disk
name = source_image.basename
large_image = "#{some_dir}/#{name}_1280_1024.jpg"
orig_size = image_magick.get_size(source_image) # => "1440x1230"  { h: 1440, w: 1230 }
image_magick.resize(source_image, max_width: IMAGE_SIZE_LARGE_WIDTH,
  max_height: IMAGE_SIZE_LARGE_HEIGHT, outfile: large_image, format: "jpg")
large_size = image_magick.get_size(large_image) # { h: 1280, w: 987 }
large_size = "#{large_size[:x]}x#{large_size[:h]}"
orig_size = "#{orig_size[:x]}x#{orig_size[:h]}"
...

db_image = Image.create(..., large_size: large_size, original_size: orig_size)

# On the Rails App Side:

class Content < ActiveRecord::Base
  # ...common stuff goes here
  belongs_to :resource
end

class Image < Content
  def image_src(size = :medium_square)
    case size
    when :medium_square
      "images/#{base_url}_#{IMAGE_SIZE_MED_SQ}_#{IMAGE_SIZE_MED_SQ}"
    when :medium
      "images/#{base_url}_#{IMAGE_SIZE_MED_SQ_W}_#{IMAGE_SIZE_MED_SQ_H}"
    when :original
      "iamges/#{base_url}.jpg"
    end
  end
end


# HTML:

- media = page.media.first
# => <img src="234508934_640_480.jpg" size="440x187"/>
image(media.image_src(:large), size: media.large_size)
# Original size:
image(media.image_src(:original), size: media.original_size)
















# Timing an ugly query:

# This one line takes about 10 minutes, so ... sit back?
entry_ids = hierarchy.ancestry_set.to_a ; 1

entries = HierarchyEntry.includes(
  relationships_from: [:to_hierarchy_entry],
  relationships_to: [:from_hierarchy_entry]
).where(id: entry_ids) ; 1

index = 0
time = Time.now
# entries.find_in_batches(batch_size: 1000) do |batch|
entries.find_in_batches(batch_size: 10) do |batch|
  index += 1
  new_time = Time.now
  diff = if time
    d = (new_time - time).round(2)
    d == 0 ? "" : "(#{d})"
  else
    ""
  end
  time = new_time
  puts "Index #{index}, time diff: #{diff}sec"
  batch.each do |thing|
    thing.relationships_from.map(&:to_hash)
    thing.relationships_to.map(&:to_hash)
  end
end

### names

things = Resque.peek(:php, 0, 25000) ; things.size
stuff = {}
things.each { |t| a = t["args"].first ; stuff.has_key?(a) ? Resque::Job.destroy(:php, CodeBridge, a) : stuff[a] = true } ; 1
# things.select { |t| t["args"].first["cmd"] == "reindex_taxon_concept" }.each { |t| Resque::Job.destroy(:php, CodeBridge, t["args"].first) }

### https://github.com/EOL/tramea/issues/272

# lines = IO.readlines("/app/log/AllBad_other.tsv") ; lines.size
# CSV.foreach("/app/log/AllBad_section_and_series.tsv", col_sep: "\t") do |line|
@user = User.find(20470)
pairs = {}
index = 0
CSV.foreach("/app/log/AllBad_other.tsv", col_sep: "\t") do |line|
  index += 1
  EOL.log("#{index}") if index % 10_000 == 0
  begin
    page = line[0]
    id1 = line[1]
    id2 = line[5]
    EOL.log("Line #{index} was missing a page id") && next if page.blank?
    EOL.log("Line #{index} was missing the first entry id") && next if id1.blank?
    EOL.log("Line #{index} was missing the second entry id") && next if id2.blank?
    pairs[page] = [id1, id2]
  rescue => e
    EOL.log("LINE #{index} BAD (#{e.message}): #{page}:#{id1}:#{id2}")
  end
end ; pairs.keys.size

entries = {}
group_num = 0
group_size = 1000
expected_groups = (pairs.keys.size.to_f / group_size).ceil
pairs.keys.in_groups_of(group_size, false) do |group|
  group_num += 1
  EOL.log("Working on group #{group_num}/#{expected_groups}...")
  ids = Set.new()
  group.each do |key|
    ids << pairs[key][0]
    ids << pairs[key][1]
  end
  HierarchyEntry.includes(name: { canonical_form: :name }).
                 where(id: ids.to_a).find_each do |entry|
    entries[entry.id] = entry
  end
end ; entries.keys.size

splits = {}
@lines = {}
concept_ids = Set.new()
pairs.each do |page, bad_entries|
  (id1, id2) = bad_entries
  page_id = page.to_i
  entry1 = entries[id1.to_i]
  entry2 = entries[id2.to_i]
  if entry1.nil?
    EOL.log("Missing entry #{id1}")
    next
  elsif entry2.nil?
    EOL.log("Missing entry #{id2}")
    next
  elsif entry1.taxon_concept_id != entry2.taxon_concept_id
    EOL.log("NOT THE SAME CONCEPT: #{page}:#{id1}:#{id2}")
    next
  elsif entry1.taxon_concept_id != page_id
    EOL.log("Concept changed: #{page}:#{id1}:#{id2} (to #{entry1.taxon_concept_id} from #{page})")
    next
  end
  concept_ids << page.to_i
  splits[page_id] ||= Set.new
  splits[page_id] << entry1
  splits[page_id] << entry2
  @lines[page_id] ||= Set.new
  @lines[page_id] << "#{page}:#{id1}:#{id2}"
end ; splits.keys.size

concepts = {}
TaxonConcept.where(id: concept_ids.to_a).find_each do |concept|
  concepts[concept.id] = concept
end ; concepts.keys.size

def problem(page_id)
  EOL.log("Affected lines:")
  @bad_pages << page_id
  if @lines.has_key?(page_id)
    @lines[page_id].each do |line|
      EOL.log("  #{line}")
    end
  end
end

error_count = 0
@bad_pages = []
splits.each do |page_id, bad_entries|
  unless concepts.has_key?(page_id)
    EOL.log("Missing concept #{page_id}... superceded, perhaps?")
    @bad_pages << page_id
    next
  end
  if concepts[page_id].superceded?
    EOL.log("Concept #{page_id} superceded, skipping.")
    @bad_pages << page_id
    next
  end
  if bad_entries.include?(nil)
    EOL.log("Skipping #{page_id} because one of the entries was nil.")
    error_count += 1
    @bad_pages << page_id
    # If more than 2% are bad, bail:
    if error_count > splits.keys.size / 200
      EOL.log("Whoa! Too many errors, bailing.")
      break
    end
    next
  end
  if bad_entries.any? { |e| e.name.nil? }
    EOL.log("Skipping #{page_id} because one of the entries had no name.")
    error_count += 1
    @bad_pages << page_id
    # If more than 2% are bad, bail:
    if error_count > splits.keys.size / 200
      EOL.log("Whoa! Too many errors, bailing.")
      break
    end
    next
  end
  sorted = bad_entries.sort_by { |e| e.name.try(:canonical_form).try(:string).length }
  name1 = sorted.first.name.try(:canonical_form).try(:string)
  exemplar_id = sorted.first.id
  index = sorted.index { |e| e.name.try(:canonical_form).try(:string).length > name1.length }
  if index.nil?
    sorted = bad_entries.sort_by { |e| e.name.try(:string).length }
    name1 = sorted.first.name.try(:string)
    exemplar_id = sorted.first.id
    index = sorted.index { |e| e.name.try(:string).length > name1.length }
    if index.nil?
      EOL.log("ERROR: Couldn't find a longer name")
      problem(page_id)
      next
    end
  end
  other_ids = sorted[index..-1].map(&:id)
  begin
    concepts[page_id].split_classifications(other_ids, user: @user, exemplar_id: exemplar_id)
  rescue EOL::Exceptions::ClassificationsLocked => e
    EOL.log("ERROR: LOCKED CLASSIFICATION (TC ##{page_id}):")
    problem(page_id)
    next
  rescue EOL::Exceptions::TooManyDescendantsToCurate => e
    EOL.log("ERROR: TOO BIG: #{line}")
    problem(page_id)
    next
  rescue => e
    EOL.log("ERROR: MISC... #{line}")
    EOL.log_error(e)
    problem(page_id)
    next
  end
  sleep(1)
end
puts @bad_pages.join(", ")
EOL.log("Bad pages: #{@bad_pages.join(", ")}")

### Fixing broken hierarchies:

> log/reflatten.log
nohup bundle exec rails runner -e production "
Resource.with_master {
  Resource.harvested.includes(:hierarchy).each { |r|
    EOL.log(%Q{#{r.title} (#{r.id})}) ;
    h = r.hierarchy ;
    EOL.log(%Q{Empty hierarchy!}) unless h ;
    next unless h ;
    e = h.hierarchy_entries.where(depth: 4).first ;
    EOL.log(%Q{Nothing deep enough to check!}) unless e ;
    EOL.log(%Q{Already OK.}) if e and e.ancestors.size == 4 ;
    next if e and e.ancestors.size == 4 ;
    h.try(:flatten)
  }
}
" > log/reflatten.log &
tail -f log/reflatten.log log/production.log

resource.hierarchy.hierarchy_entries.where(depth: 4).first.ancestors.size == 4

### #259 - Looking for bad merges, where one concept has multiple entries OF
# DIFFERENT RANKS (and names) from the same hierarchy

q_select = %q{SELECT DISTINCT he.taxon_concept_id page, he.id id_1,
  n.string name_1, he.depth depth_1, he.rank_id rank_1, other.id id_2,
  o_n.string name_2, other.depth depth_2, other.rank_id rank_2 }
q_out = %q{  INTO OUTFILE "/var/lib/mysql/bad_merges_HIERID.csv"
  FIELDS TERMINATED BY ','
  OPTIONALLY ENCLOSED BY '"'
  LINES TERMINATED BY '\\n' }
q_from = %q{
  FROM hierarchy_entries he
  JOIN names n ON (he.name_id = n.id)
  JOIN hierarchies h ON (he.hierarchy_id = h.id)
  LEFT JOIN hierarchy_entries other
    ON (he.taxon_concept_id = other.taxon_concept_id
      AND he.hierarchy_id = HIERID
      AND he.id != other.id
      AND other.published = 1 AND other.visibility_id = 1
      AND (he.rank_id != other.rank_id OR he.depth != other.depth))
  JOIN names o_n ON (other.name_id = o_n.id)
WHERE o_n.string != n.string AND he.published = 1 AND he.visibility_id = 1
ORDER BY he.taxon_concept_id, he.id, other.id }

hiers = Set.new ; events = HarvestEvent.complete.published.includes(resource: :hierarchy).all ; events.each { |e| hiers <<
 e.resource.hierarchy if e.resource.try :hierarchy } ; 1
conn = ActiveRecord::Base.connection ; 1

hiers.each do |hierarchy|
  begin
    q = (q_select + q_from).gsub(/HIERID/m, hierarchy.id.to_s) ; 1
    result = conn.execute(q) ; 1
    if result.size == 0
      puts "No conflicts in hierarchy #{hierarchy.id} (#{hierarchy.label})"
      next
    else
      puts "Okay, #{result.size} results in #{hierarchy.id} (#{hierarchy.label})"
      # result.each_with_index { |r,i| puts r.to_csv ; break if i > 100 }
      lbl = hierarchy.label.sub(/[^ \w].*$/, "").sub(/\s$/, "").sub(/\s/, "_").downcase
      CSV.open("log/bad_merge_candidates_#{hierarchy.id}_#{lbl}.csv", "wb") do |csv|
        csv << %w(page_id entry1_id entry1_name entry1_depth
          entry1_rank_id entry2_id entry2_name entry2_depth entry2_rank_id)
        result.each { |r| csv << r }
      end ; 1
    end
  rescue => e
    puts "GAH! #{e.message} from hierarchy #{hierarchy.id} (#{hierarchy.label})"
  end
end ; 1

### - errr... later

Benchmark.measure { Resource.find(958).relate }

concept = TaxonConcept.find 4327143
(genus, species) = concept.hierarchy_entries.where(hierarchy_id: 464)
sim = Hierarchy::Similarity.new
# sim.compare(genus, species)
entries = concept.hierarchy_entries
# results = []
# entries.each { |entry| next if entry == species ; hash = entry.from_solr.first ; next if hash.nil? ; results << sim.compare(species, hash) }
# results.each { |r| puts r.inspect } ; 1

### -- https://github.com/EOL/tramea/issues/239 part 3 - re-merging split entries...

pairs = IO.readlines("/app/log/pairs.txt")
split_entries = Set.new
pairs.each_with_index do |line, index|
  line.chomp!
  begin
    next unless line =~ /-(\d+)\D+-(\d+)/
    id1 = $1
    id2 = $2
    entry1 = HierarchyEntry.find(id1)
    entry2 = HierarchyEntry.find(id2)
    concept = entry1.taxon_concept
    if entry1.taxon_concept_id != entry2.taxon_concept_id
      (safer, split) = [entry1, entry2].sort_by { |e| e.taxon_concept_id }
      split_entries << split
    end
  rescue => e
    puts "Yuck, bad UTF8"
  end
end

grouped = split_entries.to_a.group_by { |e| e.hierarchy_id }
grouped_ids = {}
grouped.each { |k,v| grouped_ids[k] = v.map(&:id) } ; 1

grouped_ids.each do |hierarchy_id, ids|
  hierarchy = Hierarchy.find(hierarchy_id)
  hierarchy.reindex_and_merge_ids(ids)
end

### -- https://github.com/EOL/tramea/issues/239 part 2 - pulling apart entries

@user = User.find(20470)
pairs = IO.readlines("/app/log/pairs.txt")

splits = {}
@lines = {}
pairs.each_with_index do |line, index|
  line.chomp!
  EOL.log("#{index}") if index % 500 == 0
  begin
    next unless line =~ /-(\d+)\D+-(\d+)/
    id1 = $1
    id2 = $2
    entry1 = HierarchyEntry.includes(name: { canonical_form: :name }).find(id1)
    entry2 = HierarchyEntry.includes(name: { canonical_form: :name }).find(id2)
    concept = entry1.taxon_concept
    if entry1.taxon_concept_id != entry2.taxon_concept_id
      EOL.log("NOT THE SAME CONCEPT: #{line}")
      next
    end
    splits[concept] ||= Set.new
    splits[concept] += [entry1, entry2]
    @lines[concept] ||= Set.new
    @lines[concept] << line
  rescue => e
    EOL.log("OOPS: #{line}")
    EOL.log_error(e) # Usually UTF-8 PROBLEMS
  end
end

def problem(concept)
  EOL.log("Affected lines:")
  @lines[concept].each do |line|
    EOL.log("  #{line}")
  end
end

splits.each do |concept, entries|
  sorted = entries.sort_by { |e| e.name.try(:canonical_form).try(:string) }
  if sorted.include?(nil)
    EOL.log("ERROR: Missing a name on concept #{concept.id}.")
    problem(concept)
    next
  end
  name1 = sorted[0].name.try(:canonical_form).try(:string)
  # name2 = sorted[1].name.try(:canonical_form).try(:string)
  # if name1.length == name2.length
  #   names = entries.map { |e| e.name.try(:canonical_form).try(:string) }
  #   EOL.log("ERROR: Same length: {#{name1}} and {#{name2}}")
  #   problem(concept)
  #   next
  # end
  exemplar_id = sorted[0].id
  index = sorted.index { |e| e.name.try(:canonical_form).try(:string).length > name1.length }
  if index.nil?
    EOL.log("ERROR: Couldn't find a longer name")
    problem(concept)
    next
  end
  other_ids = sorted[index..-1].map(&:id)
  begin
    concept.split_classifications(other_ids, user: @user, exemplar_id: exemplar_id)
  rescue EOL::Exceptions::ClassificationsLocked => e
    EOL.log("ERROR: LOCKED CLASSIFICATION (TC ##{concept.id}):")
    problem(concept)
    next
  rescue EOL::Exceptions::TooManyDescendantsToCurate => e
    EOL.log("ERROR: TOO BIG: #{line}")
    problem(concept)
    next
  rescue => e
    EOL.log("ERROR: MISC... #{line}")
    EOL.log_error(e)
    problem(concept)
    next
  end
  sleep(3)
end

### -- https://github.com/EOL/tramea/issues/239

@solr = SolrCore::HierarchyEntryRelationships.new

def get_page(query, page)
  @solr.paginate(query, page: page, per_page: 1000)["response"]["docs"]
end

merges = {}
ids.each do |id|
  resource = Hierarchy.find(id).resource
  next unless resource && resource.title
  these_merges = Set.new
  query = "confidence:0 AND relationship:name AND hierarchy_id_1:#{id}"
  page = 0
  docs = []
  begin
    page += 1
    docs = get_page(query, page)
    all_entry_ids = Set.new(docs.map { |d| d["hierarchy_entry_id_1"] })
    all_entry_ids += docs.map { |d| d["hierarchy_entry_id_2"] }
    entries = HierarchyEntry.includes(name: { canonical_form: :name }).
      published.where(id: all_entry_ids.to_a)
    docs.each do |doc|
      id1 = doc["hierarchy_entry_id_1"]
      id2 = doc["hierarchy_entry_id_2"]
      entry1 = entries.find { |e| e.id == id1 }
      entry2 = entries.find { |e| e.id == id2 }
      if entry1 && entry2 && entry1.taxon_concept_id == entry2.taxon_concept_id
        name1 = entry1.name.try(:canonical_form).try(:string) || "No name! (really)"
        name2 = entry2.name.try(:canonical_form).try(:string) || "No name! (really)"
        these_merges << "[#{entry1.taxon_concept_id}](http://eol.org/pages/#{entry1.taxon_concept_id}/overview) -> #{name1} (#{id1}), #{name2} (#{id2})"
      end
    end
  end while docs.size > 0
  merges["[#{resource.title}](http://eol.org/content_partners/#{resource.content_partner_id}/resources/#{resource.id})"] = these_merges
end

File.open("/app/log/resource_merges.md", "w") do |file|
  merges.keys.each do |title|
    file.write("#{title}:\n")
    merges[title].each do |val|
      file.write("  #{val}\n")
    end
  end
end

### --

params = {page: 1, exact: true, id: "Cistanthe weberbaueri (Diels) Carolin ex M.A.Hershkovitz"}
params[:q] = params[:id]

params = {page: 1, exact: true, id: "carnivores"}
params[:q] = params[:id]

params = {page: 1, exact: false, id: "tiger", filter_by_string: "Lepidoptera" }
params[:q] = params[:id]

params = {page: 1, exact: false, id: "chromatica", filter_by_string: "Lepidoptera" }
params[:q] = params[:id]

params = {page: 1, exact: false, id: "chromatica", filter_by_taxon_concept_id: 747 }
params[:q] = params[:id]


### --

resource = Resource.find(544)
event = resource.harvest_events.last
@solr = SolrCore::SiteSearch.new
@solr.index_type(TaxonConcept, HierarchyEntry.where(id: event.new_hierarchy_entry_ids).pluck(:taxon_concept_id))


# Delete me later!

@resource = Resource.find 974 # North American Butterflies and Skippers

concept1 = TaxonConcept.find 45882481
concept2 = TaxonConcept.find 250906

entry1 = HierarchyEntry.find 63226353
entry2 = HierarchyEntry.find 55715950

@solr = SolrCore::HierarchyEntryRelationships.new
@hierarchy = Hierarchy.find 1505
@compared = []
@all_hierarchies = false
@confirmed_exclusions = {}
@entries_matched = []
@supercedures = {} # The ones we do
@superceded = {} # ALL superceded ids we encounter, ever (saves queries)
@visible_id = Visibility.get_visible.id
@preview_id = Visibility.get_preview.id
@per_page = 10
page = 1

hierarchy1 = @hierarchy
hierarchy2 = Hierarhcy.find 903

matches_in_h1 = @solr.paginate("hierarchy_id_1:#{hierarchy1.id} AND (visibility_id_1:#{@visible_id} OR visibility_id_1:#{@preview_id}) AND same_concept:false AND (relationship:name OR confidence:[0.25 TO *])", per_page: 2)["response"]["numFound"]

full_q = "hierarchy_id_1:#{hierarchy1.id} AND (visibility_id_1:#{@visible_id} OR visibility_id_1:#{@preview_id}) AND hierarchy_id_2:#{hierarchy2.id} AND (visibility_id_2:#{@visible_id} OR visibility_id_2:#{@preview_id}) AND same_concept:false"
options = { sort: "relationship asc, visibility_id_1 asc, visibility_id_2 asc, confidence desc, hierarchy_entry_id_1 asc, hierarchy_entry_id_2 asc"}.merge(page: page, per_page: @per_page)
response = @solr.paginate(full_q, options)
entries = response["response"]["docs"]

# - Moving backward to Relator...

@solr = SolrCore::HierarchyEntries.new
response = @solr.paginate("hierarchy_id:#{@hierarchy.id}", page: page, per_page: @per_page)
entries = response["response"]["docs"]
entries_in_solr = @solr.paginate("hierarchy_id:#{@hierarchy.id}", page: page, per_page: 1)["response"]["numFound"]

from_entry = @solr.paginate("id:#{entry1.id}", page: page, per_page: 1)["response"]["docs"][0]
to_entry = @solr.paginate("id:#{entry2.id}", page: page, per_page: 1)["response"]["docs"][0]


# When ready:
@resource = Resource.find 974
@resource.preview
